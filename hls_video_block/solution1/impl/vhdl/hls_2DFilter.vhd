-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity hls_2DFilter is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    input_mat_data_V_dout : IN STD_LOGIC_VECTOR (6 downto 0);
    input_mat_data_V_empty_n : IN STD_LOGIC;
    input_mat_data_V_read : OUT STD_LOGIC;
    output_mat_data_V_din : OUT STD_LOGIC_VECTOR (0 downto 0);
    output_mat_data_V_full_n : IN STD_LOGIC;
    output_mat_data_V_write : OUT STD_LOGIC );
end;


architecture behav of hls_2DFilter is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_500 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000010100000000";
    constant ap_const_lv64_4FF : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000010011111111";
    constant ap_const_lv10_2D3 : STD_LOGIC_VECTOR (9 downto 0) := "1011010011";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv10_2D0 : STD_LOGIC_VECTOR (9 downto 0) := "1011010000";
    constant ap_const_lv10_2 : STD_LOGIC_VECTOR (9 downto 0) := "0000000010";
    constant ap_const_lv11_500 : STD_LOGIC_VECTOR (10 downto 0) := "10100000000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv11_4FF : STD_LOGIC_VECTOR (10 downto 0) := "10011111111";
    constant ap_const_lv11_2 : STD_LOGIC_VECTOR (10 downto 0) := "00000000010";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv8_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_C8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011001000";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal input_mat_data_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal exitcond3_reg_882 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_870 : STD_LOGIC_VECTOR (0 downto 0);
    signal output_mat_data_V_blk_n : STD_LOGIC;
    signal tmp_1_reg_874 : STD_LOGIC_VECTOR (0 downto 0);
    signal col_reg_358 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal exitcond2_fu_369_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal row_1_fu_375_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal row_1_reg_865 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_s_fu_381_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_fu_387_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_fu_393_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_reg_878 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond3_fu_426_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal col_1_fu_432_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal col_1_reg_886 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_5_fu_438_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_reg_891 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_fu_444_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_reg_895 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_fu_450_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_7_reg_899 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_8_i_fu_674_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_i_reg_919 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_fu_731_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_12_reg_924 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_12_reg_924_pp0_iter1_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal line_buffer_1_0_va_4_reg_935 : STD_LOGIC_VECTOR (10 downto 0);
    signal line_buffer_2_0_va_4_reg_941 : STD_LOGIC_VECTOR (10 downto 0);
    signal line_buffer_3_0_va_2_reg_947 : STD_LOGIC_VECTOR (10 downto 0);
    signal line_buffer_3_0_va_2_reg_947_pp0_iter1_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal line_buffer_4_0_va_6_gep_fu_304_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state3 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_predicate_op129_read_state4 : BOOLEAN;
    signal ap_predicate_op146_write_state4 : BOOLEAN;
    signal ap_block_state4_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state6_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal line_buffer_0_0_va_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal line_buffer_0_0_va_ce0 : STD_LOGIC;
    signal line_buffer_0_0_va_we0 : STD_LOGIC;
    signal line_buffer_0_0_va_q0 : STD_LOGIC_VECTOR (6 downto 0);
    signal line_buffer_0_0_va_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal line_buffer_0_0_va_ce1 : STD_LOGIC;
    signal line_buffer_0_0_va_we1 : STD_LOGIC;
    signal line_buffer_1_0_va_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal line_buffer_1_0_va_ce0 : STD_LOGIC;
    signal line_buffer_1_0_va_we0 : STD_LOGIC;
    signal line_buffer_1_0_va_q0 : STD_LOGIC_VECTOR (6 downto 0);
    signal line_buffer_1_0_va_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal line_buffer_1_0_va_ce1 : STD_LOGIC;
    signal line_buffer_1_0_va_we1 : STD_LOGIC;
    signal line_buffer_1_0_va_q1 : STD_LOGIC_VECTOR (6 downto 0);
    signal line_buffer_2_0_va_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal line_buffer_2_0_va_ce0 : STD_LOGIC;
    signal line_buffer_2_0_va_we0 : STD_LOGIC;
    signal line_buffer_2_0_va_q0 : STD_LOGIC_VECTOR (6 downto 0);
    signal line_buffer_2_0_va_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal line_buffer_2_0_va_ce1 : STD_LOGIC;
    signal line_buffer_2_0_va_we1 : STD_LOGIC;
    signal line_buffer_2_0_va_q1 : STD_LOGIC_VECTOR (6 downto 0);
    signal line_buffer_3_0_va_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal line_buffer_3_0_va_ce0 : STD_LOGIC;
    signal line_buffer_3_0_va_we0 : STD_LOGIC;
    signal line_buffer_3_0_va_q0 : STD_LOGIC_VECTOR (6 downto 0);
    signal line_buffer_4_0_va_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal line_buffer_4_0_va_ce0 : STD_LOGIC;
    signal line_buffer_4_0_va_we0 : STD_LOGIC;
    signal line_buffer_4_0_va_q0 : STD_LOGIC_VECTOR (6 downto 0);
    signal line_buffer_4_0_va_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal line_buffer_4_0_va_ce1 : STD_LOGIC;
    signal line_buffer_4_0_va_we1 : STD_LOGIC;
    signal row_reg_347 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_phi_mux_col_phi_fu_362_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal tmp_10_fu_471_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_8_fu_738_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal ap_block_pp0_stage1_01001 : BOOLEAN;
    signal IN_WINDOW_val_val_0_3_fu_86 : STD_LOGIC_VECTOR (7 downto 0);
    signal IN_WINDOW_val_val_0_2_fu_90 : STD_LOGIC_VECTOR (7 downto 0);
    signal IN_WINDOW_val_val_0_1_fu_94 : STD_LOGIC_VECTOR (7 downto 0);
    signal IN_WINDOW_val_0_val_fu_98 : STD_LOGIC_VECTOR (7 downto 0);
    signal IN_WINDOW_val_0_val_4_fu_742_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal IN_WINDOW_val_val_1_3_fu_102 : STD_LOGIC_VECTOR (7 downto 0);
    signal IN_WINDOW_val_val_1_2_fu_106 : STD_LOGIC_VECTOR (7 downto 0);
    signal IN_WINDOW_val_val_1_1_fu_110 : STD_LOGIC_VECTOR (7 downto 0);
    signal IN_WINDOW_val_1_val_fu_114 : STD_LOGIC_VECTOR (7 downto 0);
    signal IN_WINDOW_val_1_val_4_fu_746_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal IN_WINDOW_val_val_2_3_fu_118 : STD_LOGIC_VECTOR (7 downto 0);
    signal IN_WINDOW_val_val_2_2_fu_122 : STD_LOGIC_VECTOR (7 downto 0);
    signal IN_WINDOW_val_2_val_fu_126 : STD_LOGIC_VECTOR (7 downto 0);
    signal IN_WINDOW_val_2_val_1_fu_130 : STD_LOGIC_VECTOR (7 downto 0);
    signal IN_WINDOW_val_2_val_5_fu_750_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_9_fu_465_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_15_fu_490_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp7_fu_520_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_14_fu_484_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_17_fu_502_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp9_fu_532_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_13_fu_478_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp8_fu_538_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp6_fu_526_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_18_fu_508_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_16_fu_496_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_fu_550_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_19_fu_514_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp2_fu_562_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp3_fu_568_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp1_fu_556_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal x_mag_2_2_2_i_fu_544_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_i_cast_fu_584_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal xs_V_3_fu_588_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal xs_V_1_i_i_i_cast_fu_594_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_s_fu_608_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_3_fu_598_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_1_fu_580_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_mag_2_2_2_i_fu_574_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_5_i_cast_fu_628_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal xs_V_4_fu_632_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal xs_V_1_i_i1_i_cast_fu_638_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_2_fu_652_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_4_fu_642_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_3_fu_624_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal agg_result_V_i_i_i_fu_616_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal agg_result_V_i_i4_i_fu_660_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_i_fu_668_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_fu_725_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_70 : BOOLEAN;

    component hls_2DFilter_linebkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (6 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (6 downto 0) );
    end component;


    component hls_2DFilter_linecud IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (6 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (6 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (6 downto 0) );
    end component;


    component hls_2DFilter_lineeOg IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (6 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (6 downto 0) );
    end component;



begin
    line_buffer_0_0_va_U : component hls_2DFilter_linebkb
    generic map (
        DataWidth => 7,
        AddressRange => 1284,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => line_buffer_0_0_va_address0,
        ce0 => line_buffer_0_0_va_ce0,
        we0 => line_buffer_0_0_va_we0,
        d0 => line_buffer_1_0_va_q1,
        q0 => line_buffer_0_0_va_q0,
        address1 => line_buffer_0_0_va_address1,
        ce1 => line_buffer_0_0_va_ce1,
        we1 => line_buffer_0_0_va_we1,
        d1 => line_buffer_4_0_va_q0);

    line_buffer_1_0_va_U : component hls_2DFilter_linecud
    generic map (
        DataWidth => 7,
        AddressRange => 1284,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => line_buffer_1_0_va_address0,
        ce0 => line_buffer_1_0_va_ce0,
        we0 => line_buffer_1_0_va_we0,
        d0 => line_buffer_2_0_va_q1,
        q0 => line_buffer_1_0_va_q0,
        address1 => line_buffer_1_0_va_address1,
        ce1 => line_buffer_1_0_va_ce1,
        we1 => line_buffer_1_0_va_we1,
        d1 => line_buffer_4_0_va_q0,
        q1 => line_buffer_1_0_va_q1);

    line_buffer_2_0_va_U : component hls_2DFilter_linecud
    generic map (
        DataWidth => 7,
        AddressRange => 1284,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => line_buffer_2_0_va_address0,
        ce0 => line_buffer_2_0_va_ce0,
        we0 => line_buffer_2_0_va_we0,
        d0 => line_buffer_3_0_va_q0,
        q0 => line_buffer_2_0_va_q0,
        address1 => line_buffer_2_0_va_address1,
        ce1 => line_buffer_2_0_va_ce1,
        we1 => line_buffer_2_0_va_we1,
        d1 => line_buffer_4_0_va_q0,
        q1 => line_buffer_2_0_va_q1);

    line_buffer_3_0_va_U : component hls_2DFilter_lineeOg
    generic map (
        DataWidth => 7,
        AddressRange => 1284,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => line_buffer_3_0_va_address0,
        ce0 => line_buffer_3_0_va_ce0,
        we0 => line_buffer_3_0_va_we0,
        d0 => line_buffer_4_0_va_q0,
        q0 => line_buffer_3_0_va_q0);

    line_buffer_4_0_va_U : component hls_2DFilter_linebkb
    generic map (
        DataWidth => 7,
        AddressRange => 1284,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => line_buffer_4_0_va_address0,
        ce0 => line_buffer_4_0_va_ce0,
        we0 => line_buffer_4_0_va_we0,
        d0 => input_mat_data_V_dout,
        q0 => line_buffer_4_0_va_q0,
        address1 => line_buffer_4_0_va_address1,
        ce1 => line_buffer_4_0_va_ce1,
        we1 => line_buffer_4_0_va_we1,
        d1 => input_mat_data_V_dout);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((exitcond2_fu_369_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((exitcond2_fu_369_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((exitcond2_fu_369_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    col_reg_358_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond3_reg_882 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                col_reg_358 <= col_1_reg_886;
            elsif (((exitcond2_fu_369_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                col_reg_358 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    row_reg_347_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                row_reg_347 <= ap_const_lv10_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                row_reg_347 <= row_1_reg_865;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_1_reg_874 = ap_const_lv1_1) and (exitcond3_reg_882 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                    IN_WINDOW_val_0_val_fu_98(6 downto 0) <= IN_WINDOW_val_0_val_4_fu_742_p1(6 downto 0);
                    IN_WINDOW_val_1_val_fu_114(6 downto 0) <= IN_WINDOW_val_1_val_4_fu_746_p1(6 downto 0);
                    IN_WINDOW_val_2_val_1_fu_130(6 downto 0) <= IN_WINDOW_val_2_val_5_fu_750_p1(6 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_1_reg_874 = ap_const_lv1_1) and (exitcond3_fu_426_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                    IN_WINDOW_val_2_val_fu_126(6 downto 0) <= IN_WINDOW_val_2_val_1_fu_130(6 downto 0);
                    IN_WINDOW_val_val_0_1_fu_94(6 downto 0) <= IN_WINDOW_val_0_val_fu_98(6 downto 0);
                    IN_WINDOW_val_val_0_2_fu_90(6 downto 0) <= IN_WINDOW_val_val_0_1_fu_94(6 downto 0);
                    IN_WINDOW_val_val_0_3_fu_86(6 downto 0) <= IN_WINDOW_val_val_0_2_fu_90(6 downto 0);
                    IN_WINDOW_val_val_1_1_fu_110(6 downto 0) <= IN_WINDOW_val_1_val_fu_114(6 downto 0);
                    IN_WINDOW_val_val_1_2_fu_106(6 downto 0) <= IN_WINDOW_val_val_1_1_fu_110(6 downto 0);
                    IN_WINDOW_val_val_1_3_fu_102(6 downto 0) <= IN_WINDOW_val_val_1_2_fu_106(6 downto 0);
                    IN_WINDOW_val_val_2_2_fu_122(6 downto 0) <= IN_WINDOW_val_2_val_fu_126(6 downto 0);
                    IN_WINDOW_val_val_2_3_fu_118(6 downto 0) <= IN_WINDOW_val_val_2_2_fu_122(6 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                col_1_reg_886 <= col_1_fu_432_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                exitcond3_reg_882 <= exitcond3_fu_426_p2;
                line_buffer_3_0_va_2_reg_947_pp0_iter1_reg <= line_buffer_3_0_va_2_reg_947;
                    tmp_12_reg_924_pp0_iter1_reg(10 downto 0) <= tmp_12_reg_924(10 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond3_fu_426_p2 = ap_const_lv1_0) and (tmp_4_reg_878 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                line_buffer_1_0_va_4_reg_935 <= tmp_12_fu_731_p1(11 - 1 downto 0);
                line_buffer_2_0_va_4_reg_941 <= tmp_12_fu_731_p1(11 - 1 downto 0);
                line_buffer_3_0_va_2_reg_947 <= tmp_12_fu_731_p1(11 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                row_1_reg_865 <= row_1_fu_375_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond3_fu_426_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                    tmp_12_reg_924(10 downto 0) <= tmp_12_fu_731_p1(10 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond2_fu_369_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                tmp_1_reg_874 <= tmp_1_fu_387_p2;
                tmp_4_reg_878 <= tmp_4_fu_393_p2;
                tmp_s_reg_870 <= tmp_s_fu_381_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_s_reg_870 = ap_const_lv1_1) and (exitcond3_fu_426_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_5_reg_891 <= tmp_5_fu_438_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_s_reg_870 = ap_const_lv1_1) and (tmp_5_fu_438_p2 = ap_const_lv1_0) and (exitcond3_fu_426_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_6_reg_895 <= tmp_6_fu_444_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_s_reg_870 = ap_const_lv1_1) and (tmp_6_fu_444_p2 = ap_const_lv1_0) and (tmp_5_fu_438_p2 = ap_const_lv1_0) and (exitcond3_fu_426_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_7_reg_899 <= tmp_7_fu_450_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_1_reg_874 = ap_const_lv1_1) and (exitcond3_fu_426_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_8_i_reg_919 <= tmp_8_i_fu_674_p2;
            end if;
        end if;
    end process;
    tmp_12_reg_924(63 downto 11) <= "00000000000000000000000000000000000000000000000000000";
    tmp_12_reg_924_pp0_iter1_reg(63 downto 11) <= "00000000000000000000000000000000000000000000000000000";
    IN_WINDOW_val_val_0_3_fu_86(7) <= '0';
    IN_WINDOW_val_val_0_2_fu_90(7) <= '0';
    IN_WINDOW_val_val_0_1_fu_94(7) <= '0';
    IN_WINDOW_val_0_val_fu_98(7) <= '0';
    IN_WINDOW_val_val_1_3_fu_102(7) <= '0';
    IN_WINDOW_val_val_1_2_fu_106(7) <= '0';
    IN_WINDOW_val_val_1_1_fu_110(7) <= '0';
    IN_WINDOW_val_1_val_fu_114(7) <= '0';
    IN_WINDOW_val_val_2_3_fu_118(7) <= '0';
    IN_WINDOW_val_val_2_2_fu_122(7) <= '0';
    IN_WINDOW_val_2_val_fu_126(7) <= '0';
    IN_WINDOW_val_2_val_1_fu_130(7) <= '0';

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, exitcond2_fu_369_p2, ap_CS_fsm_state2, exitcond3_fu_426_p2, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter1, ap_block_pp0_stage1_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((exitcond2_fu_369_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((exitcond3_fu_426_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((exitcond3_fu_426_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((not(((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXXX";
        end case;
    end process;
    IN_WINDOW_val_0_val_4_fu_742_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(line_buffer_0_0_va_q0),8));
    IN_WINDOW_val_1_val_4_fu_746_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(line_buffer_1_0_va_q0),8));
    IN_WINDOW_val_2_val_5_fu_750_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(line_buffer_2_0_va_q0),8));
    agg_result_V_i_i4_i_fu_660_p3 <= 
        p_Result_4_fu_642_p4 when (p_Result_2_fu_652_p3(0) = '1') else 
        p_Val2_3_fu_624_p1;
    agg_result_V_i_i_i_fu_616_p3 <= 
        p_Result_3_fu_598_p4 when (p_Result_s_fu_608_p3(0) = '1') else 
        p_Val2_1_fu_580_p1;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(3);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state7 <= ap_CS_fsm(4);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_01001_assign_proc : process(input_mat_data_V_empty_n, output_mat_data_V_full_n, ap_enable_reg_pp0_iter0, ap_predicate_op129_read_state4, ap_predicate_op146_write_state4)
    begin
                ap_block_pp0_stage1_01001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (((output_mat_data_V_full_n = ap_const_logic_0) and (ap_predicate_op146_write_state4 = ap_const_boolean_1)) or ((input_mat_data_V_empty_n = ap_const_logic_0) and (ap_predicate_op129_read_state4 = ap_const_boolean_1))));
    end process;


    ap_block_pp0_stage1_11001_assign_proc : process(input_mat_data_V_empty_n, output_mat_data_V_full_n, ap_enable_reg_pp0_iter0, ap_predicate_op129_read_state4, ap_predicate_op146_write_state4)
    begin
                ap_block_pp0_stage1_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (((output_mat_data_V_full_n = ap_const_logic_0) and (ap_predicate_op146_write_state4 = ap_const_boolean_1)) or ((input_mat_data_V_empty_n = ap_const_logic_0) and (ap_predicate_op129_read_state4 = ap_const_boolean_1))));
    end process;


    ap_block_pp0_stage1_subdone_assign_proc : process(input_mat_data_V_empty_n, output_mat_data_V_full_n, ap_enable_reg_pp0_iter0, ap_predicate_op129_read_state4, ap_predicate_op146_write_state4)
    begin
                ap_block_pp0_stage1_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (((output_mat_data_V_full_n = ap_const_logic_0) and (ap_predicate_op146_write_state4 = ap_const_boolean_1)) or ((input_mat_data_V_empty_n = ap_const_logic_0) and (ap_predicate_op129_read_state4 = ap_const_boolean_1))));
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1 <= ((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_pp0_stage1_iter0_assign_proc : process(input_mat_data_V_empty_n, output_mat_data_V_full_n, ap_predicate_op129_read_state4, ap_predicate_op146_write_state4)
    begin
                ap_block_state4_pp0_stage1_iter0 <= (((output_mat_data_V_full_n = ap_const_logic_0) and (ap_predicate_op146_write_state4 = ap_const_boolean_1)) or ((input_mat_data_V_empty_n = ap_const_logic_0) and (ap_predicate_op129_read_state4 = ap_const_boolean_1)));
    end process;

        ap_block_state5_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_70_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, exitcond3_reg_882, tmp_s_reg_870)
    begin
                ap_condition_70 <= ((tmp_s_reg_870 = ap_const_lv1_1) and (exitcond3_reg_882 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1));
    end process;


    ap_condition_pp0_exit_iter0_state3_assign_proc : process(exitcond3_fu_426_p2)
    begin
        if ((exitcond3_fu_426_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, exitcond2_fu_369_p2, ap_CS_fsm_state2)
    begin
        if (((exitcond2_fu_369_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_col_phi_fu_362_p4_assign_proc : process(exitcond3_reg_882, col_reg_358, ap_CS_fsm_pp0_stage0, col_1_reg_886, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((exitcond3_reg_882 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_col_phi_fu_362_p4 <= col_1_reg_886;
        else 
            ap_phi_mux_col_phi_fu_362_p4 <= col_reg_358;
        end if; 
    end process;


    ap_predicate_op129_read_state4_assign_proc : process(exitcond3_reg_882, tmp_s_reg_870)
    begin
                ap_predicate_op129_read_state4 <= ((tmp_s_reg_870 = ap_const_lv1_1) and (exitcond3_reg_882 = ap_const_lv1_0));
    end process;


    ap_predicate_op146_write_state4_assign_proc : process(exitcond3_reg_882, tmp_1_reg_874)
    begin
                ap_predicate_op146_write_state4 <= ((tmp_1_reg_874 = ap_const_lv1_1) and (exitcond3_reg_882 = ap_const_lv1_0));
    end process;

    ap_ready <= internal_ap_ready;
    col_1_fu_432_p2 <= std_logic_vector(unsigned(ap_phi_mux_col_phi_fu_362_p4) + unsigned(ap_const_lv11_1));
    exitcond2_fu_369_p2 <= "1" when (row_reg_347 = ap_const_lv10_2D3) else "0";
    exitcond3_fu_426_p2 <= "1" when (ap_phi_mux_col_phi_fu_362_p4 = ap_const_lv11_500) else "0";

    input_mat_data_V_blk_n_assign_proc : process(input_mat_data_V_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, exitcond3_reg_882, tmp_s_reg_870)
    begin
        if (((tmp_s_reg_870 = ap_const_lv1_1) and (exitcond3_reg_882 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            input_mat_data_V_blk_n <= input_mat_data_V_empty_n;
        else 
            input_mat_data_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    input_mat_data_V_read_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_predicate_op129_read_state4, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_predicate_op129_read_state4 = ap_const_boolean_1))) then 
            input_mat_data_V_read <= ap_const_logic_1;
        else 
            input_mat_data_V_read <= ap_const_logic_0;
        end if; 
    end process;


    internal_ap_ready_assign_proc : process(exitcond2_fu_369_p2, ap_CS_fsm_state2)
    begin
        if (((exitcond2_fu_369_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_0_0_va_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage0, tmp_12_reg_924, ap_block_pp0_stage0, tmp_10_fu_471_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                line_buffer_0_0_va_address0 <= tmp_12_reg_924(11 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                line_buffer_0_0_va_address0 <= tmp_10_fu_471_p1(11 - 1 downto 0);
            else 
                line_buffer_0_0_va_address0 <= "XXXXXXXXXXX";
            end if;
        else 
            line_buffer_0_0_va_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;

    line_buffer_0_0_va_address1 <= tmp_12_reg_924_pp0_iter1_reg(11 - 1 downto 0);

    line_buffer_0_0_va_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            line_buffer_0_0_va_ce0 <= ap_const_logic_1;
        else 
            line_buffer_0_0_va_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_0_0_va_ce1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            line_buffer_0_0_va_ce1 <= ap_const_logic_1;
        else 
            line_buffer_0_0_va_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_0_0_va_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, exitcond3_reg_882, tmp_4_reg_878, ap_block_pp0_stage1_11001)
    begin
        if (((tmp_4_reg_878 = ap_const_lv1_0) and (exitcond3_reg_882 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            line_buffer_0_0_va_we0 <= ap_const_logic_1;
        else 
            line_buffer_0_0_va_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_0_0_va_we1_assign_proc : process(ap_CS_fsm_pp0_stage1, tmp_4_reg_878, ap_enable_reg_pp0_iter1, ap_block_pp0_stage1_11001)
    begin
        if (((tmp_4_reg_878 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            line_buffer_0_0_va_we1 <= ap_const_logic_1;
        else 
            line_buffer_0_0_va_we1 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_1_0_va_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage0, line_buffer_1_0_va_4_reg_935, ap_block_pp0_stage0, tmp_10_fu_471_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                line_buffer_1_0_va_address0 <= line_buffer_1_0_va_4_reg_935;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                line_buffer_1_0_va_address0 <= tmp_10_fu_471_p1(11 - 1 downto 0);
            else 
                line_buffer_1_0_va_address0 <= "XXXXXXXXXXX";
            end if;
        else 
            line_buffer_1_0_va_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    line_buffer_1_0_va_address1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage0, tmp_12_fu_731_p1, tmp_12_reg_924_pp0_iter1_reg, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            line_buffer_1_0_va_address1 <= tmp_12_reg_924_pp0_iter1_reg(11 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            line_buffer_1_0_va_address1 <= tmp_12_fu_731_p1(11 - 1 downto 0);
        else 
            line_buffer_1_0_va_address1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    line_buffer_1_0_va_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            line_buffer_1_0_va_ce0 <= ap_const_logic_1;
        else 
            line_buffer_1_0_va_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_1_0_va_ce1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)))) then 
            line_buffer_1_0_va_ce1 <= ap_const_logic_1;
        else 
            line_buffer_1_0_va_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_1_0_va_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, exitcond3_reg_882, tmp_4_reg_878, ap_block_pp0_stage1_11001)
    begin
        if (((tmp_4_reg_878 = ap_const_lv1_0) and (exitcond3_reg_882 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            line_buffer_1_0_va_we0 <= ap_const_logic_1;
        else 
            line_buffer_1_0_va_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_1_0_va_we1_assign_proc : process(ap_CS_fsm_pp0_stage1, tmp_4_reg_878, ap_enable_reg_pp0_iter1, ap_block_pp0_stage1_11001)
    begin
        if (((tmp_4_reg_878 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            line_buffer_1_0_va_we1 <= ap_const_logic_1;
        else 
            line_buffer_1_0_va_we1 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_2_0_va_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage0, line_buffer_2_0_va_4_reg_941, ap_block_pp0_stage0, tmp_10_fu_471_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                line_buffer_2_0_va_address0 <= line_buffer_2_0_va_4_reg_941;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                line_buffer_2_0_va_address0 <= tmp_10_fu_471_p1(11 - 1 downto 0);
            else 
                line_buffer_2_0_va_address0 <= "XXXXXXXXXXX";
            end if;
        else 
            line_buffer_2_0_va_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    line_buffer_2_0_va_address1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage0, tmp_12_fu_731_p1, tmp_12_reg_924_pp0_iter1_reg, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            line_buffer_2_0_va_address1 <= tmp_12_reg_924_pp0_iter1_reg(11 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            line_buffer_2_0_va_address1 <= tmp_12_fu_731_p1(11 - 1 downto 0);
        else 
            line_buffer_2_0_va_address1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    line_buffer_2_0_va_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            line_buffer_2_0_va_ce0 <= ap_const_logic_1;
        else 
            line_buffer_2_0_va_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_2_0_va_ce1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)))) then 
            line_buffer_2_0_va_ce1 <= ap_const_logic_1;
        else 
            line_buffer_2_0_va_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_2_0_va_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, exitcond3_reg_882, tmp_4_reg_878, ap_block_pp0_stage1_11001)
    begin
        if (((tmp_4_reg_878 = ap_const_lv1_0) and (exitcond3_reg_882 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            line_buffer_2_0_va_we0 <= ap_const_logic_1;
        else 
            line_buffer_2_0_va_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_2_0_va_we1_assign_proc : process(ap_CS_fsm_pp0_stage1, tmp_4_reg_878, ap_enable_reg_pp0_iter1, ap_block_pp0_stage1_11001)
    begin
        if (((tmp_4_reg_878 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            line_buffer_2_0_va_we1 <= ap_const_logic_1;
        else 
            line_buffer_2_0_va_we1 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_3_0_va_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_4_reg_878, ap_CS_fsm_pp0_stage0, tmp_12_fu_731_p1, tmp_12_reg_924_pp0_iter1_reg, line_buffer_3_0_va_2_reg_947_pp0_iter1_reg, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((tmp_4_reg_878 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            line_buffer_3_0_va_address0 <= tmp_12_reg_924_pp0_iter1_reg(11 - 1 downto 0);
        elsif (((tmp_4_reg_878 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            line_buffer_3_0_va_address0 <= line_buffer_3_0_va_2_reg_947_pp0_iter1_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            line_buffer_3_0_va_address0 <= tmp_12_fu_731_p1(11 - 1 downto 0);
        else 
            line_buffer_3_0_va_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    line_buffer_3_0_va_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, tmp_4_reg_878, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_4_reg_878 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((tmp_4_reg_878 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)))) then 
            line_buffer_3_0_va_ce0 <= ap_const_logic_1;
        else 
            line_buffer_3_0_va_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_3_0_va_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, tmp_4_reg_878, ap_enable_reg_pp0_iter1, ap_block_pp0_stage1_11001)
    begin
        if ((((tmp_4_reg_878 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((tmp_4_reg_878 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)))) then 
            line_buffer_3_0_va_we0 <= ap_const_logic_1;
        else 
            line_buffer_3_0_va_we0 <= ap_const_logic_0;
        end if; 
    end process;

    line_buffer_4_0_va_6_gep_fu_304_p3 <= tmp_12_reg_924(11 - 1 downto 0);

    line_buffer_4_0_va_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, exitcond3_reg_882, tmp_s_reg_870, tmp_4_reg_878, ap_CS_fsm_pp0_stage0, tmp_5_reg_891, tmp_6_reg_895, tmp_12_reg_924, line_buffer_4_0_va_6_gep_fu_304_p3, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, tmp_8_fu_738_p1)
    begin
        if (((tmp_4_reg_878 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            line_buffer_4_0_va_address0 <= line_buffer_4_0_va_6_gep_fu_304_p3;
        elsif (((tmp_4_reg_878 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            line_buffer_4_0_va_address0 <= tmp_12_reg_924(11 - 1 downto 0);
        elsif (((tmp_5_reg_891 = ap_const_lv1_1) and (tmp_s_reg_870 = ap_const_lv1_1) and (exitcond3_reg_882 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            line_buffer_4_0_va_address0 <= ap_const_lv64_0(11 - 1 downto 0);
        elsif (((tmp_6_reg_895 = ap_const_lv1_1) and (tmp_s_reg_870 = ap_const_lv1_1) and (tmp_5_reg_891 = ap_const_lv1_0) and (exitcond3_reg_882 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            line_buffer_4_0_va_address0 <= ap_const_lv64_500(11 - 1 downto 0);
        elsif (((tmp_s_reg_870 = ap_const_lv1_1) and (tmp_6_reg_895 = ap_const_lv1_0) and (tmp_5_reg_891 = ap_const_lv1_0) and (exitcond3_reg_882 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            line_buffer_4_0_va_address0 <= tmp_8_fu_738_p1(11 - 1 downto 0);
        else 
            line_buffer_4_0_va_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    line_buffer_4_0_va_address1_assign_proc : process(tmp_5_reg_891, tmp_6_reg_895, ap_condition_70)
    begin
        if ((ap_const_boolean_1 = ap_condition_70)) then
            if ((tmp_5_reg_891 = ap_const_lv1_1)) then 
                line_buffer_4_0_va_address1 <= ap_const_lv64_1(11 - 1 downto 0);
            elsif (((tmp_6_reg_895 = ap_const_lv1_1) and (tmp_5_reg_891 = ap_const_lv1_0))) then 
                line_buffer_4_0_va_address1 <= ap_const_lv64_4FF(11 - 1 downto 0);
            else 
                line_buffer_4_0_va_address1 <= "XXXXXXXXXXX";
            end if;
        else 
            line_buffer_4_0_va_address1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    line_buffer_4_0_va_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, exitcond3_reg_882, tmp_s_reg_870, tmp_4_reg_878, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, tmp_5_reg_891, tmp_6_reg_895, ap_enable_reg_pp0_iter1, ap_block_pp0_stage1_11001)
    begin
        if ((((tmp_5_reg_891 = ap_const_lv1_1) and (tmp_s_reg_870 = ap_const_lv1_1) and (exitcond3_reg_882 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((tmp_6_reg_895 = ap_const_lv1_1) and (tmp_s_reg_870 = ap_const_lv1_1) and (tmp_5_reg_891 = ap_const_lv1_0) and (exitcond3_reg_882 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((tmp_s_reg_870 = ap_const_lv1_1) and (tmp_6_reg_895 = ap_const_lv1_0) and (tmp_5_reg_891 = ap_const_lv1_0) and (exitcond3_reg_882 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((tmp_4_reg_878 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_4_reg_878 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            line_buffer_4_0_va_ce0 <= ap_const_logic_1;
        else 
            line_buffer_4_0_va_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_4_0_va_ce1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, exitcond3_reg_882, tmp_s_reg_870, tmp_5_reg_891, tmp_6_reg_895, ap_block_pp0_stage1_11001)
    begin
        if ((((tmp_5_reg_891 = ap_const_lv1_1) and (tmp_s_reg_870 = ap_const_lv1_1) and (exitcond3_reg_882 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((tmp_6_reg_895 = ap_const_lv1_1) and (tmp_s_reg_870 = ap_const_lv1_1) and (tmp_5_reg_891 = ap_const_lv1_0) and (exitcond3_reg_882 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            line_buffer_4_0_va_ce1 <= ap_const_logic_1;
        else 
            line_buffer_4_0_va_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_4_0_va_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, exitcond3_reg_882, tmp_s_reg_870, tmp_5_reg_891, tmp_6_reg_895, ap_block_pp0_stage1_11001)
    begin
        if ((((tmp_5_reg_891 = ap_const_lv1_1) and (tmp_s_reg_870 = ap_const_lv1_1) and (exitcond3_reg_882 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((tmp_6_reg_895 = ap_const_lv1_1) and (tmp_s_reg_870 = ap_const_lv1_1) and (tmp_5_reg_891 = ap_const_lv1_0) and (exitcond3_reg_882 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((tmp_s_reg_870 = ap_const_lv1_1) and (tmp_6_reg_895 = ap_const_lv1_0) and (tmp_5_reg_891 = ap_const_lv1_0) and (exitcond3_reg_882 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            line_buffer_4_0_va_we0 <= ap_const_logic_1;
        else 
            line_buffer_4_0_va_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_4_0_va_we1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, exitcond3_reg_882, tmp_s_reg_870, tmp_5_reg_891, tmp_6_reg_895, ap_block_pp0_stage1_11001)
    begin
        if ((((tmp_5_reg_891 = ap_const_lv1_1) and (tmp_s_reg_870 = ap_const_lv1_1) and (exitcond3_reg_882 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((tmp_6_reg_895 = ap_const_lv1_1) and (tmp_s_reg_870 = ap_const_lv1_1) and (tmp_5_reg_891 = ap_const_lv1_0) and (exitcond3_reg_882 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            line_buffer_4_0_va_we1 <= ap_const_logic_1;
        else 
            line_buffer_4_0_va_we1 <= ap_const_logic_0;
        end if; 
    end process;


    output_mat_data_V_blk_n_assign_proc : process(output_mat_data_V_full_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, exitcond3_reg_882, tmp_1_reg_874)
    begin
        if (((tmp_1_reg_874 = ap_const_lv1_1) and (exitcond3_reg_882 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            output_mat_data_V_blk_n <= output_mat_data_V_full_n;
        else 
            output_mat_data_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    output_mat_data_V_din <= tmp_8_i_reg_919;

    output_mat_data_V_write_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_predicate_op146_write_state4, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_predicate_op146_write_state4 = ap_const_boolean_1))) then 
            output_mat_data_V_write <= ap_const_logic_1;
        else 
            output_mat_data_V_write <= ap_const_logic_0;
        end if; 
    end process;

    p_Result_2_fu_652_p3 <= y_mag_2_2_2_i_fu_574_p2(7 downto 7);
    
    p_Result_3_fu_598_p4_proc : process(xs_V_1_i_i_i_cast_fu_594_p1)
    begin
        p_Result_3_fu_598_p4 <= xs_V_1_i_i_i_cast_fu_594_p1;
        p_Result_3_fu_598_p4(31) <= ap_const_lv1_0(0);
    end process;

    
    p_Result_4_fu_642_p4_proc : process(xs_V_1_i_i1_i_cast_fu_638_p1)
    begin
        p_Result_4_fu_642_p4 <= xs_V_1_i_i1_i_cast_fu_638_p1;
        p_Result_4_fu_642_p4(31) <= ap_const_lv1_0(0);
    end process;

    p_Result_s_fu_608_p3 <= x_mag_2_2_2_i_fu_544_p2(7 downto 7);
        p_Val2_1_fu_580_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_mag_2_2_2_i_fu_544_p2),32));

        p_Val2_3_fu_624_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(y_mag_2_2_2_i_fu_574_p2),32));


    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    row_1_fu_375_p2 <= std_logic_vector(unsigned(row_reg_347) + unsigned(ap_const_lv10_1));
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp1_fu_556_p2 <= std_logic_vector(unsigned(tmp_fu_550_p2) + unsigned(IN_WINDOW_val_val_1_2_fu_106));
    tmp2_fu_562_p2 <= std_logic_vector(unsigned(IN_WINDOW_val_val_0_2_fu_90) + unsigned(tmp_19_fu_514_p2));
    tmp3_fu_568_p2 <= std_logic_vector(unsigned(tmp2_fu_562_p2) + unsigned(tmp_13_fu_478_p2));
    tmp6_fu_526_p2 <= std_logic_vector(unsigned(tmp7_fu_520_p2) + unsigned(IN_WINDOW_val_val_1_3_fu_102));
    tmp7_fu_520_p2 <= std_logic_vector(unsigned(IN_WINDOW_val_val_1_2_fu_106) + unsigned(tmp_15_fu_490_p2));
    tmp8_fu_538_p2 <= std_logic_vector(unsigned(tmp9_fu_532_p2) + unsigned(tmp_13_fu_478_p2));
    tmp9_fu_532_p2 <= std_logic_vector(unsigned(tmp_14_fu_484_p2) + unsigned(tmp_17_fu_502_p2));
    tmp_10_fu_471_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_9_fu_465_p2),64));
    tmp_11_fu_725_p2 <= std_logic_vector(unsigned(ap_phi_mux_col_phi_fu_362_p4) + unsigned(ap_const_lv11_2));
    tmp_12_fu_731_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_11_fu_725_p2),64));
    tmp_13_fu_478_p2 <= std_logic_vector(shift_left(unsigned(IN_WINDOW_val_val_0_3_fu_86),to_integer(unsigned('0' & ap_const_lv8_1(8-1 downto 0)))));
    tmp_14_fu_484_p2 <= std_logic_vector(shift_left(unsigned(IN_WINDOW_val_val_0_2_fu_90),to_integer(unsigned('0' & ap_const_lv8_1(8-1 downto 0)))));
    tmp_15_fu_490_p2 <= std_logic_vector(shift_left(unsigned(IN_WINDOW_val_val_0_1_fu_94),to_integer(unsigned('0' & ap_const_lv8_2(8-1 downto 0)))));
    tmp_16_fu_496_p2 <= std_logic_vector(shift_left(unsigned(IN_WINDOW_val_val_1_3_fu_102),to_integer(unsigned('0' & ap_const_lv8_1(8-1 downto 0)))));
    tmp_17_fu_502_p2 <= std_logic_vector(shift_left(unsigned(IN_WINDOW_val_val_1_1_fu_110),to_integer(unsigned('0' & ap_const_lv8_1(8-1 downto 0)))));
    tmp_18_fu_508_p2 <= std_logic_vector(shift_left(unsigned(IN_WINDOW_val_val_2_3_fu_118),to_integer(unsigned('0' & ap_const_lv8_2(8-1 downto 0)))));
    tmp_19_fu_514_p2 <= std_logic_vector(shift_left(unsigned(IN_WINDOW_val_val_2_2_fu_122),to_integer(unsigned('0' & ap_const_lv8_1(8-1 downto 0)))));
    tmp_1_fu_387_p2 <= "1" when (unsigned(row_reg_347) > unsigned(ap_const_lv10_2)) else "0";
    tmp_4_fu_393_p2 <= "1" when (row_reg_347 = ap_const_lv10_0) else "0";
    tmp_5_fu_438_p2 <= "1" when (ap_phi_mux_col_phi_fu_362_p4 = ap_const_lv11_0) else "0";
        tmp_5_i_cast_fu_628_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(y_mag_2_2_2_i_fu_574_p2),9));

    tmp_6_fu_444_p2 <= "1" when (ap_phi_mux_col_phi_fu_362_p4 = ap_const_lv11_4FF) else "0";
    tmp_7_fu_450_p2 <= std_logic_vector(unsigned(ap_phi_mux_col_phi_fu_362_p4) + unsigned(ap_const_lv11_2));
    tmp_7_i_fu_668_p2 <= std_logic_vector(unsigned(agg_result_V_i_i_i_fu_616_p3) + unsigned(agg_result_V_i_i4_i_fu_660_p3));
    tmp_8_fu_738_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_7_reg_899),64));
    tmp_8_i_fu_674_p2 <= "1" when (signed(tmp_7_i_fu_668_p2) > signed(ap_const_lv32_C8)) else "0";
    tmp_9_fu_465_p2 <= std_logic_vector(unsigned(ap_const_lv11_2) + unsigned(ap_phi_mux_col_phi_fu_362_p4));
    tmp_fu_550_p2 <= std_logic_vector(unsigned(tmp_18_fu_508_p2) + unsigned(tmp_16_fu_496_p2));
        tmp_i_cast_fu_584_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_mag_2_2_2_i_fu_544_p2),9));

    tmp_s_fu_381_p2 <= "1" when (unsigned(row_reg_347) < unsigned(ap_const_lv10_2D0)) else "0";
    x_mag_2_2_2_i_fu_544_p2 <= std_logic_vector(unsigned(tmp8_fu_538_p2) + unsigned(tmp6_fu_526_p2));
        xs_V_1_i_i1_i_cast_fu_638_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(xs_V_4_fu_632_p2),32));

        xs_V_1_i_i_i_cast_fu_594_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(xs_V_3_fu_588_p2),32));

    xs_V_3_fu_588_p2 <= std_logic_vector(unsigned(ap_const_lv9_0) - unsigned(tmp_i_cast_fu_584_p1));
    xs_V_4_fu_632_p2 <= std_logic_vector(unsigned(ap_const_lv9_0) - unsigned(tmp_5_i_cast_fu_628_p1));
    y_mag_2_2_2_i_fu_574_p2 <= std_logic_vector(unsigned(tmp3_fu_568_p2) + unsigned(tmp1_fu_556_p2));
end behav;
