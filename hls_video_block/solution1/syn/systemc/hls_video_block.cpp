// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "hls_video_block.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_lv<24> hls_video_block::ap_const_lv24_0 = "000000000000000000000000";
const sc_lv<3> hls_video_block::ap_const_lv3_0 = "000";
const sc_lv<1> hls_video_block::ap_const_lv1_0 = "0";
const sc_lv<21> hls_video_block::ap_const_lv21_E1000 = "11100001000000000000";
const sc_logic hls_video_block::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic hls_video_block::ap_const_logic_0 = sc_dt::Log_0;

hls_video_block::hls_video_block(sc_module_name name) : sc_module(name), mVcdFile(0) {
    strm2mat_U0 = new strm2mat("strm2mat_U0");
    strm2mat_U0->ap_clk(ap_clk);
    strm2mat_U0->ap_rst(ap_rst_n_inv);
    strm2mat_U0->ap_start(strm2mat_U0_ap_start);
    strm2mat_U0->start_full_n(start_for_rgb2gry_U0_full_n);
    strm2mat_U0->ap_done(strm2mat_U0_ap_done);
    strm2mat_U0->ap_continue(strm2mat_U0_ap_continue);
    strm2mat_U0->ap_idle(strm2mat_U0_ap_idle);
    strm2mat_U0->ap_ready(strm2mat_U0_ap_ready);
    strm2mat_U0->start_out(strm2mat_U0_start_out);
    strm2mat_U0->start_write(strm2mat_U0_start_write);
    strm2mat_U0->INPUT_STREAM_TDATA(INPUT_STREAM_TDATA);
    strm2mat_U0->INPUT_STREAM_TVALID(INPUT_STREAM_TVALID);
    strm2mat_U0->INPUT_STREAM_TREADY(strm2mat_U0_INPUT_STREAM_TREADY);
    strm2mat_U0->INPUT_STREAM_TKEEP(INPUT_STREAM_TKEEP);
    strm2mat_U0->INPUT_STREAM_TSTRB(INPUT_STREAM_TSTRB);
    strm2mat_U0->INPUT_STREAM_TUSER(INPUT_STREAM_TUSER);
    strm2mat_U0->INPUT_STREAM_TLAST(INPUT_STREAM_TLAST);
    strm2mat_U0->INPUT_STREAM_TID(INPUT_STREAM_TID);
    strm2mat_U0->INPUT_STREAM_TDEST(INPUT_STREAM_TDEST);
    strm2mat_U0->OUT_size_read(ap_var_for_const0);
    strm2mat_U0->OUT_data_V_din(strm2mat_U0_OUT_data_V_din);
    strm2mat_U0->OUT_data_V_full_n(in_tmp_data_V_full_n);
    strm2mat_U0->OUT_data_V_write(strm2mat_U0_OUT_data_V_write);
    rgb2gry_U0 = new rgb2gry("rgb2gry_U0");
    rgb2gry_U0->ap_clk(ap_clk);
    rgb2gry_U0->ap_rst(ap_rst_n_inv);
    rgb2gry_U0->ap_start(rgb2gry_U0_ap_start);
    rgb2gry_U0->start_full_n(start_for_hls_2DFilter_U0_full_n);
    rgb2gry_U0->ap_done(rgb2gry_U0_ap_done);
    rgb2gry_U0->ap_continue(rgb2gry_U0_ap_continue);
    rgb2gry_U0->ap_idle(rgb2gry_U0_ap_idle);
    rgb2gry_U0->ap_ready(rgb2gry_U0_ap_ready);
    rgb2gry_U0->start_out(rgb2gry_U0_start_out);
    rgb2gry_U0->start_write(rgb2gry_U0_start_write);
    rgb2gry_U0->input_mat_data_V_dout(in_tmp_data_V_dout);
    rgb2gry_U0->input_mat_data_V_empty_n(in_tmp_data_V_empty_n);
    rgb2gry_U0->input_mat_data_V_read(rgb2gry_U0_input_mat_data_V_read);
    rgb2gry_U0->output_mat_data_V_din(rgb2gry_U0_output_mat_data_V_din);
    rgb2gry_U0->output_mat_data_V_full_n(im_1_data_V_full_n);
    rgb2gry_U0->output_mat_data_V_write(rgb2gry_U0_output_mat_data_V_write);
    hls_2DFilter_U0 = new hls_2DFilter("hls_2DFilter_U0");
    hls_2DFilter_U0->ap_clk(ap_clk);
    hls_2DFilter_U0->ap_rst(ap_rst_n_inv);
    hls_2DFilter_U0->ap_start(hls_2DFilter_U0_ap_start);
    hls_2DFilter_U0->start_full_n(start_for_gry2rgb_U0_full_n);
    hls_2DFilter_U0->ap_done(hls_2DFilter_U0_ap_done);
    hls_2DFilter_U0->ap_continue(hls_2DFilter_U0_ap_continue);
    hls_2DFilter_U0->ap_idle(hls_2DFilter_U0_ap_idle);
    hls_2DFilter_U0->ap_ready(hls_2DFilter_U0_ap_ready);
    hls_2DFilter_U0->start_out(hls_2DFilter_U0_start_out);
    hls_2DFilter_U0->start_write(hls_2DFilter_U0_start_write);
    hls_2DFilter_U0->input_mat_data_V_dout(im_1_data_V_dout);
    hls_2DFilter_U0->input_mat_data_V_empty_n(im_1_data_V_empty_n);
    hls_2DFilter_U0->input_mat_data_V_read(hls_2DFilter_U0_input_mat_data_V_read);
    hls_2DFilter_U0->output_mat_data_V_din(hls_2DFilter_U0_output_mat_data_V_din);
    hls_2DFilter_U0->output_mat_data_V_full_n(im_2_data_V_full_n);
    hls_2DFilter_U0->output_mat_data_V_write(hls_2DFilter_U0_output_mat_data_V_write);
    gry2rgb_U0 = new gry2rgb("gry2rgb_U0");
    gry2rgb_U0->ap_clk(ap_clk);
    gry2rgb_U0->ap_rst(ap_rst_n_inv);
    gry2rgb_U0->ap_start(gry2rgb_U0_ap_start);
    gry2rgb_U0->start_full_n(start_for_mat2strm_U0_full_n);
    gry2rgb_U0->ap_done(gry2rgb_U0_ap_done);
    gry2rgb_U0->ap_continue(gry2rgb_U0_ap_continue);
    gry2rgb_U0->ap_idle(gry2rgb_U0_ap_idle);
    gry2rgb_U0->ap_ready(gry2rgb_U0_ap_ready);
    gry2rgb_U0->start_out(gry2rgb_U0_start_out);
    gry2rgb_U0->start_write(gry2rgb_U0_start_write);
    gry2rgb_U0->input_mat_data_V_dout(im_2_data_V_dout);
    gry2rgb_U0->input_mat_data_V_empty_n(im_2_data_V_empty_n);
    gry2rgb_U0->input_mat_data_V_read(gry2rgb_U0_input_mat_data_V_read);
    gry2rgb_U0->output_mat_data_V_din(gry2rgb_U0_output_mat_data_V_din);
    gry2rgb_U0->output_mat_data_V_full_n(out_tmp_data_V_full_n);
    gry2rgb_U0->output_mat_data_V_write(gry2rgb_U0_output_mat_data_V_write);
    mat2strm_U0 = new mat2strm("mat2strm_U0");
    mat2strm_U0->ap_clk(ap_clk);
    mat2strm_U0->ap_rst(ap_rst_n_inv);
    mat2strm_U0->ap_start(mat2strm_U0_ap_start);
    mat2strm_U0->ap_done(mat2strm_U0_ap_done);
    mat2strm_U0->ap_continue(mat2strm_U0_ap_continue);
    mat2strm_U0->ap_idle(mat2strm_U0_ap_idle);
    mat2strm_U0->ap_ready(mat2strm_U0_ap_ready);
    mat2strm_U0->IN_size_read(ap_var_for_const0);
    mat2strm_U0->IN_data_V_dout(out_tmp_data_V_dout);
    mat2strm_U0->IN_data_V_empty_n(out_tmp_data_V_empty_n);
    mat2strm_U0->IN_data_V_read(mat2strm_U0_IN_data_V_read);
    mat2strm_U0->OUTPUT_STREAM_TDATA(mat2strm_U0_OUTPUT_STREAM_TDATA);
    mat2strm_U0->OUTPUT_STREAM_TVALID(mat2strm_U0_OUTPUT_STREAM_TVALID);
    mat2strm_U0->OUTPUT_STREAM_TREADY(OUTPUT_STREAM_TREADY);
    mat2strm_U0->OUTPUT_STREAM_TKEEP(mat2strm_U0_OUTPUT_STREAM_TKEEP);
    mat2strm_U0->OUTPUT_STREAM_TSTRB(mat2strm_U0_OUTPUT_STREAM_TSTRB);
    mat2strm_U0->OUTPUT_STREAM_TUSER(mat2strm_U0_OUTPUT_STREAM_TUSER);
    mat2strm_U0->OUTPUT_STREAM_TLAST(mat2strm_U0_OUTPUT_STREAM_TLAST);
    mat2strm_U0->OUTPUT_STREAM_TID(mat2strm_U0_OUTPUT_STREAM_TID);
    mat2strm_U0->OUTPUT_STREAM_TDEST(mat2strm_U0_OUTPUT_STREAM_TDEST);
    in_tmp_data_V_U = new fifo_w24_d100_A("in_tmp_data_V_U");
    in_tmp_data_V_U->clk(ap_clk);
    in_tmp_data_V_U->reset(ap_rst_n_inv);
    in_tmp_data_V_U->if_read_ce(ap_var_for_const1);
    in_tmp_data_V_U->if_write_ce(ap_var_for_const1);
    in_tmp_data_V_U->if_din(strm2mat_U0_OUT_data_V_din);
    in_tmp_data_V_U->if_full_n(in_tmp_data_V_full_n);
    in_tmp_data_V_U->if_write(strm2mat_U0_OUT_data_V_write);
    in_tmp_data_V_U->if_dout(in_tmp_data_V_dout);
    in_tmp_data_V_U->if_empty_n(in_tmp_data_V_empty_n);
    in_tmp_data_V_U->if_read(rgb2gry_U0_input_mat_data_V_read);
    im_1_data_V_U = new fifo_w7_d100_A("im_1_data_V_U");
    im_1_data_V_U->clk(ap_clk);
    im_1_data_V_U->reset(ap_rst_n_inv);
    im_1_data_V_U->if_read_ce(ap_var_for_const1);
    im_1_data_V_U->if_write_ce(ap_var_for_const1);
    im_1_data_V_U->if_din(rgb2gry_U0_output_mat_data_V_din);
    im_1_data_V_U->if_full_n(im_1_data_V_full_n);
    im_1_data_V_U->if_write(rgb2gry_U0_output_mat_data_V_write);
    im_1_data_V_U->if_dout(im_1_data_V_dout);
    im_1_data_V_U->if_empty_n(im_1_data_V_empty_n);
    im_1_data_V_U->if_read(hls_2DFilter_U0_input_mat_data_V_read);
    im_2_data_V_U = new fifo_w1_d100_A("im_2_data_V_U");
    im_2_data_V_U->clk(ap_clk);
    im_2_data_V_U->reset(ap_rst_n_inv);
    im_2_data_V_U->if_read_ce(ap_var_for_const1);
    im_2_data_V_U->if_write_ce(ap_var_for_const1);
    im_2_data_V_U->if_din(hls_2DFilter_U0_output_mat_data_V_din);
    im_2_data_V_U->if_full_n(im_2_data_V_full_n);
    im_2_data_V_U->if_write(hls_2DFilter_U0_output_mat_data_V_write);
    im_2_data_V_U->if_dout(im_2_data_V_dout);
    im_2_data_V_U->if_empty_n(im_2_data_V_empty_n);
    im_2_data_V_U->if_read(gry2rgb_U0_input_mat_data_V_read);
    out_tmp_data_V_U = new fifo_w17_d100_A("out_tmp_data_V_U");
    out_tmp_data_V_U->clk(ap_clk);
    out_tmp_data_V_U->reset(ap_rst_n_inv);
    out_tmp_data_V_U->if_read_ce(ap_var_for_const1);
    out_tmp_data_V_U->if_write_ce(ap_var_for_const1);
    out_tmp_data_V_U->if_din(gry2rgb_U0_output_mat_data_V_din);
    out_tmp_data_V_U->if_full_n(out_tmp_data_V_full_n);
    out_tmp_data_V_U->if_write(gry2rgb_U0_output_mat_data_V_write);
    out_tmp_data_V_U->if_dout(out_tmp_data_V_dout);
    out_tmp_data_V_U->if_empty_n(out_tmp_data_V_empty_n);
    out_tmp_data_V_U->if_read(mat2strm_U0_IN_data_V_read);
    start_for_rgb2gryg8j_U = new start_for_rgb2gryg8j("start_for_rgb2gryg8j_U");
    start_for_rgb2gryg8j_U->clk(ap_clk);
    start_for_rgb2gryg8j_U->reset(ap_rst_n_inv);
    start_for_rgb2gryg8j_U->if_read_ce(ap_var_for_const1);
    start_for_rgb2gryg8j_U->if_write_ce(ap_var_for_const1);
    start_for_rgb2gryg8j_U->if_din(start_for_rgb2gry_U0_din);
    start_for_rgb2gryg8j_U->if_full_n(start_for_rgb2gry_U0_full_n);
    start_for_rgb2gryg8j_U->if_write(strm2mat_U0_start_write);
    start_for_rgb2gryg8j_U->if_dout(start_for_rgb2gry_U0_dout);
    start_for_rgb2gryg8j_U->if_empty_n(start_for_rgb2gry_U0_empty_n);
    start_for_rgb2gryg8j_U->if_read(rgb2gry_U0_ap_ready);
    start_for_hls_2DFhbi_U = new start_for_hls_2DFhbi("start_for_hls_2DFhbi_U");
    start_for_hls_2DFhbi_U->clk(ap_clk);
    start_for_hls_2DFhbi_U->reset(ap_rst_n_inv);
    start_for_hls_2DFhbi_U->if_read_ce(ap_var_for_const1);
    start_for_hls_2DFhbi_U->if_write_ce(ap_var_for_const1);
    start_for_hls_2DFhbi_U->if_din(start_for_hls_2DFilter_U0_din);
    start_for_hls_2DFhbi_U->if_full_n(start_for_hls_2DFilter_U0_full_n);
    start_for_hls_2DFhbi_U->if_write(rgb2gry_U0_start_write);
    start_for_hls_2DFhbi_U->if_dout(start_for_hls_2DFilter_U0_dout);
    start_for_hls_2DFhbi_U->if_empty_n(start_for_hls_2DFilter_U0_empty_n);
    start_for_hls_2DFhbi_U->if_read(hls_2DFilter_U0_ap_ready);
    start_for_gry2rgbibs_U = new start_for_gry2rgbibs("start_for_gry2rgbibs_U");
    start_for_gry2rgbibs_U->clk(ap_clk);
    start_for_gry2rgbibs_U->reset(ap_rst_n_inv);
    start_for_gry2rgbibs_U->if_read_ce(ap_var_for_const1);
    start_for_gry2rgbibs_U->if_write_ce(ap_var_for_const1);
    start_for_gry2rgbibs_U->if_din(start_for_gry2rgb_U0_din);
    start_for_gry2rgbibs_U->if_full_n(start_for_gry2rgb_U0_full_n);
    start_for_gry2rgbibs_U->if_write(hls_2DFilter_U0_start_write);
    start_for_gry2rgbibs_U->if_dout(start_for_gry2rgb_U0_dout);
    start_for_gry2rgbibs_U->if_empty_n(start_for_gry2rgb_U0_empty_n);
    start_for_gry2rgbibs_U->if_read(gry2rgb_U0_ap_ready);
    start_for_mat2strjbC_U = new start_for_mat2strjbC("start_for_mat2strjbC_U");
    start_for_mat2strjbC_U->clk(ap_clk);
    start_for_mat2strjbC_U->reset(ap_rst_n_inv);
    start_for_mat2strjbC_U->if_read_ce(ap_var_for_const1);
    start_for_mat2strjbC_U->if_write_ce(ap_var_for_const1);
    start_for_mat2strjbC_U->if_din(start_for_mat2strm_U0_din);
    start_for_mat2strjbC_U->if_full_n(start_for_mat2strm_U0_full_n);
    start_for_mat2strjbC_U->if_write(gry2rgb_U0_start_write);
    start_for_mat2strjbC_U->if_dout(start_for_mat2strm_U0_dout);
    start_for_mat2strjbC_U->if_empty_n(start_for_mat2strm_U0_empty_n);
    start_for_mat2strjbC_U->if_read(mat2strm_U0_ap_ready);

    SC_METHOD(thread_INPUT_STREAM_TREADY);
    sensitive << ( strm2mat_U0_INPUT_STREAM_TREADY );

    SC_METHOD(thread_OUTPUT_STREAM_TDATA);
    sensitive << ( mat2strm_U0_OUTPUT_STREAM_TDATA );

    SC_METHOD(thread_OUTPUT_STREAM_TDEST);
    sensitive << ( mat2strm_U0_OUTPUT_STREAM_TDEST );

    SC_METHOD(thread_OUTPUT_STREAM_TID);
    sensitive << ( mat2strm_U0_OUTPUT_STREAM_TID );

    SC_METHOD(thread_OUTPUT_STREAM_TKEEP);
    sensitive << ( mat2strm_U0_OUTPUT_STREAM_TKEEP );

    SC_METHOD(thread_OUTPUT_STREAM_TLAST);
    sensitive << ( mat2strm_U0_OUTPUT_STREAM_TLAST );

    SC_METHOD(thread_OUTPUT_STREAM_TSTRB);
    sensitive << ( mat2strm_U0_OUTPUT_STREAM_TSTRB );

    SC_METHOD(thread_OUTPUT_STREAM_TUSER);
    sensitive << ( mat2strm_U0_OUTPUT_STREAM_TUSER );

    SC_METHOD(thread_OUTPUT_STREAM_TVALID);
    sensitive << ( mat2strm_U0_OUTPUT_STREAM_TVALID );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_ap_sync_continue);

    SC_METHOD(thread_gry2rgb_U0_ap_continue);

    SC_METHOD(thread_gry2rgb_U0_ap_start);
    sensitive << ( start_for_gry2rgb_U0_empty_n );

    SC_METHOD(thread_hls_2DFilter_U0_ap_continue);

    SC_METHOD(thread_hls_2DFilter_U0_ap_start);
    sensitive << ( start_for_hls_2DFilter_U0_empty_n );

    SC_METHOD(thread_mat2strm_U0_ap_continue);

    SC_METHOD(thread_mat2strm_U0_ap_start);
    sensitive << ( start_for_mat2strm_U0_empty_n );

    SC_METHOD(thread_mat2strm_U0_start_full_n);

    SC_METHOD(thread_mat2strm_U0_start_write);

    SC_METHOD(thread_rgb2gry_U0_ap_continue);

    SC_METHOD(thread_rgb2gry_U0_ap_start);
    sensitive << ( start_for_rgb2gry_U0_empty_n );

    SC_METHOD(thread_start_for_gry2rgb_U0_din);

    SC_METHOD(thread_start_for_hls_2DFilter_U0_din);

    SC_METHOD(thread_start_for_mat2strm_U0_din);

    SC_METHOD(thread_start_for_rgb2gry_U0_din);

    SC_METHOD(thread_strm2mat_U0_ap_continue);

    SC_METHOD(thread_strm2mat_U0_ap_start);

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "hls_video_block_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, INPUT_STREAM_TDATA, "(port)INPUT_STREAM_TDATA");
    sc_trace(mVcdFile, INPUT_STREAM_TKEEP, "(port)INPUT_STREAM_TKEEP");
    sc_trace(mVcdFile, INPUT_STREAM_TSTRB, "(port)INPUT_STREAM_TSTRB");
    sc_trace(mVcdFile, INPUT_STREAM_TUSER, "(port)INPUT_STREAM_TUSER");
    sc_trace(mVcdFile, INPUT_STREAM_TLAST, "(port)INPUT_STREAM_TLAST");
    sc_trace(mVcdFile, INPUT_STREAM_TID, "(port)INPUT_STREAM_TID");
    sc_trace(mVcdFile, INPUT_STREAM_TDEST, "(port)INPUT_STREAM_TDEST");
    sc_trace(mVcdFile, OUTPUT_STREAM_TDATA, "(port)OUTPUT_STREAM_TDATA");
    sc_trace(mVcdFile, OUTPUT_STREAM_TKEEP, "(port)OUTPUT_STREAM_TKEEP");
    sc_trace(mVcdFile, OUTPUT_STREAM_TSTRB, "(port)OUTPUT_STREAM_TSTRB");
    sc_trace(mVcdFile, OUTPUT_STREAM_TUSER, "(port)OUTPUT_STREAM_TUSER");
    sc_trace(mVcdFile, OUTPUT_STREAM_TLAST, "(port)OUTPUT_STREAM_TLAST");
    sc_trace(mVcdFile, OUTPUT_STREAM_TID, "(port)OUTPUT_STREAM_TID");
    sc_trace(mVcdFile, OUTPUT_STREAM_TDEST, "(port)OUTPUT_STREAM_TDEST");
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, INPUT_STREAM_TVALID, "(port)INPUT_STREAM_TVALID");
    sc_trace(mVcdFile, INPUT_STREAM_TREADY, "(port)INPUT_STREAM_TREADY");
    sc_trace(mVcdFile, OUTPUT_STREAM_TVALID, "(port)OUTPUT_STREAM_TVALID");
    sc_trace(mVcdFile, OUTPUT_STREAM_TREADY, "(port)OUTPUT_STREAM_TREADY");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, strm2mat_U0_ap_start, "strm2mat_U0_ap_start");
    sc_trace(mVcdFile, strm2mat_U0_ap_done, "strm2mat_U0_ap_done");
    sc_trace(mVcdFile, strm2mat_U0_ap_continue, "strm2mat_U0_ap_continue");
    sc_trace(mVcdFile, strm2mat_U0_ap_idle, "strm2mat_U0_ap_idle");
    sc_trace(mVcdFile, strm2mat_U0_ap_ready, "strm2mat_U0_ap_ready");
    sc_trace(mVcdFile, strm2mat_U0_start_out, "strm2mat_U0_start_out");
    sc_trace(mVcdFile, strm2mat_U0_start_write, "strm2mat_U0_start_write");
    sc_trace(mVcdFile, strm2mat_U0_INPUT_STREAM_TREADY, "strm2mat_U0_INPUT_STREAM_TREADY");
    sc_trace(mVcdFile, strm2mat_U0_OUT_data_V_din, "strm2mat_U0_OUT_data_V_din");
    sc_trace(mVcdFile, strm2mat_U0_OUT_data_V_write, "strm2mat_U0_OUT_data_V_write");
    sc_trace(mVcdFile, rgb2gry_U0_ap_start, "rgb2gry_U0_ap_start");
    sc_trace(mVcdFile, rgb2gry_U0_ap_done, "rgb2gry_U0_ap_done");
    sc_trace(mVcdFile, rgb2gry_U0_ap_continue, "rgb2gry_U0_ap_continue");
    sc_trace(mVcdFile, rgb2gry_U0_ap_idle, "rgb2gry_U0_ap_idle");
    sc_trace(mVcdFile, rgb2gry_U0_ap_ready, "rgb2gry_U0_ap_ready");
    sc_trace(mVcdFile, rgb2gry_U0_start_out, "rgb2gry_U0_start_out");
    sc_trace(mVcdFile, rgb2gry_U0_start_write, "rgb2gry_U0_start_write");
    sc_trace(mVcdFile, rgb2gry_U0_input_mat_data_V_read, "rgb2gry_U0_input_mat_data_V_read");
    sc_trace(mVcdFile, rgb2gry_U0_output_mat_data_V_din, "rgb2gry_U0_output_mat_data_V_din");
    sc_trace(mVcdFile, rgb2gry_U0_output_mat_data_V_write, "rgb2gry_U0_output_mat_data_V_write");
    sc_trace(mVcdFile, hls_2DFilter_U0_ap_start, "hls_2DFilter_U0_ap_start");
    sc_trace(mVcdFile, hls_2DFilter_U0_ap_done, "hls_2DFilter_U0_ap_done");
    sc_trace(mVcdFile, hls_2DFilter_U0_ap_continue, "hls_2DFilter_U0_ap_continue");
    sc_trace(mVcdFile, hls_2DFilter_U0_ap_idle, "hls_2DFilter_U0_ap_idle");
    sc_trace(mVcdFile, hls_2DFilter_U0_ap_ready, "hls_2DFilter_U0_ap_ready");
    sc_trace(mVcdFile, hls_2DFilter_U0_start_out, "hls_2DFilter_U0_start_out");
    sc_trace(mVcdFile, hls_2DFilter_U0_start_write, "hls_2DFilter_U0_start_write");
    sc_trace(mVcdFile, hls_2DFilter_U0_input_mat_data_V_read, "hls_2DFilter_U0_input_mat_data_V_read");
    sc_trace(mVcdFile, hls_2DFilter_U0_output_mat_data_V_din, "hls_2DFilter_U0_output_mat_data_V_din");
    sc_trace(mVcdFile, hls_2DFilter_U0_output_mat_data_V_write, "hls_2DFilter_U0_output_mat_data_V_write");
    sc_trace(mVcdFile, gry2rgb_U0_ap_start, "gry2rgb_U0_ap_start");
    sc_trace(mVcdFile, gry2rgb_U0_ap_done, "gry2rgb_U0_ap_done");
    sc_trace(mVcdFile, gry2rgb_U0_ap_continue, "gry2rgb_U0_ap_continue");
    sc_trace(mVcdFile, gry2rgb_U0_ap_idle, "gry2rgb_U0_ap_idle");
    sc_trace(mVcdFile, gry2rgb_U0_ap_ready, "gry2rgb_U0_ap_ready");
    sc_trace(mVcdFile, gry2rgb_U0_start_out, "gry2rgb_U0_start_out");
    sc_trace(mVcdFile, gry2rgb_U0_start_write, "gry2rgb_U0_start_write");
    sc_trace(mVcdFile, gry2rgb_U0_input_mat_data_V_read, "gry2rgb_U0_input_mat_data_V_read");
    sc_trace(mVcdFile, gry2rgb_U0_output_mat_data_V_din, "gry2rgb_U0_output_mat_data_V_din");
    sc_trace(mVcdFile, gry2rgb_U0_output_mat_data_V_write, "gry2rgb_U0_output_mat_data_V_write");
    sc_trace(mVcdFile, mat2strm_U0_ap_start, "mat2strm_U0_ap_start");
    sc_trace(mVcdFile, mat2strm_U0_ap_done, "mat2strm_U0_ap_done");
    sc_trace(mVcdFile, mat2strm_U0_ap_continue, "mat2strm_U0_ap_continue");
    sc_trace(mVcdFile, mat2strm_U0_ap_idle, "mat2strm_U0_ap_idle");
    sc_trace(mVcdFile, mat2strm_U0_ap_ready, "mat2strm_U0_ap_ready");
    sc_trace(mVcdFile, mat2strm_U0_IN_data_V_read, "mat2strm_U0_IN_data_V_read");
    sc_trace(mVcdFile, mat2strm_U0_OUTPUT_STREAM_TDATA, "mat2strm_U0_OUTPUT_STREAM_TDATA");
    sc_trace(mVcdFile, mat2strm_U0_OUTPUT_STREAM_TVALID, "mat2strm_U0_OUTPUT_STREAM_TVALID");
    sc_trace(mVcdFile, mat2strm_U0_OUTPUT_STREAM_TKEEP, "mat2strm_U0_OUTPUT_STREAM_TKEEP");
    sc_trace(mVcdFile, mat2strm_U0_OUTPUT_STREAM_TSTRB, "mat2strm_U0_OUTPUT_STREAM_TSTRB");
    sc_trace(mVcdFile, mat2strm_U0_OUTPUT_STREAM_TUSER, "mat2strm_U0_OUTPUT_STREAM_TUSER");
    sc_trace(mVcdFile, mat2strm_U0_OUTPUT_STREAM_TLAST, "mat2strm_U0_OUTPUT_STREAM_TLAST");
    sc_trace(mVcdFile, mat2strm_U0_OUTPUT_STREAM_TID, "mat2strm_U0_OUTPUT_STREAM_TID");
    sc_trace(mVcdFile, mat2strm_U0_OUTPUT_STREAM_TDEST, "mat2strm_U0_OUTPUT_STREAM_TDEST");
    sc_trace(mVcdFile, ap_sync_continue, "ap_sync_continue");
    sc_trace(mVcdFile, in_tmp_data_V_full_n, "in_tmp_data_V_full_n");
    sc_trace(mVcdFile, in_tmp_data_V_dout, "in_tmp_data_V_dout");
    sc_trace(mVcdFile, in_tmp_data_V_empty_n, "in_tmp_data_V_empty_n");
    sc_trace(mVcdFile, im_1_data_V_full_n, "im_1_data_V_full_n");
    sc_trace(mVcdFile, im_1_data_V_dout, "im_1_data_V_dout");
    sc_trace(mVcdFile, im_1_data_V_empty_n, "im_1_data_V_empty_n");
    sc_trace(mVcdFile, im_2_data_V_full_n, "im_2_data_V_full_n");
    sc_trace(mVcdFile, im_2_data_V_dout, "im_2_data_V_dout");
    sc_trace(mVcdFile, im_2_data_V_empty_n, "im_2_data_V_empty_n");
    sc_trace(mVcdFile, out_tmp_data_V_full_n, "out_tmp_data_V_full_n");
    sc_trace(mVcdFile, out_tmp_data_V_dout, "out_tmp_data_V_dout");
    sc_trace(mVcdFile, out_tmp_data_V_empty_n, "out_tmp_data_V_empty_n");
    sc_trace(mVcdFile, start_for_rgb2gry_U0_din, "start_for_rgb2gry_U0_din");
    sc_trace(mVcdFile, start_for_rgb2gry_U0_full_n, "start_for_rgb2gry_U0_full_n");
    sc_trace(mVcdFile, start_for_rgb2gry_U0_dout, "start_for_rgb2gry_U0_dout");
    sc_trace(mVcdFile, start_for_rgb2gry_U0_empty_n, "start_for_rgb2gry_U0_empty_n");
    sc_trace(mVcdFile, start_for_hls_2DFilter_U0_din, "start_for_hls_2DFilter_U0_din");
    sc_trace(mVcdFile, start_for_hls_2DFilter_U0_full_n, "start_for_hls_2DFilter_U0_full_n");
    sc_trace(mVcdFile, start_for_hls_2DFilter_U0_dout, "start_for_hls_2DFilter_U0_dout");
    sc_trace(mVcdFile, start_for_hls_2DFilter_U0_empty_n, "start_for_hls_2DFilter_U0_empty_n");
    sc_trace(mVcdFile, start_for_gry2rgb_U0_din, "start_for_gry2rgb_U0_din");
    sc_trace(mVcdFile, start_for_gry2rgb_U0_full_n, "start_for_gry2rgb_U0_full_n");
    sc_trace(mVcdFile, start_for_gry2rgb_U0_dout, "start_for_gry2rgb_U0_dout");
    sc_trace(mVcdFile, start_for_gry2rgb_U0_empty_n, "start_for_gry2rgb_U0_empty_n");
    sc_trace(mVcdFile, start_for_mat2strm_U0_din, "start_for_mat2strm_U0_din");
    sc_trace(mVcdFile, start_for_mat2strm_U0_full_n, "start_for_mat2strm_U0_full_n");
    sc_trace(mVcdFile, start_for_mat2strm_U0_dout, "start_for_mat2strm_U0_dout");
    sc_trace(mVcdFile, start_for_mat2strm_U0_empty_n, "start_for_mat2strm_U0_empty_n");
    sc_trace(mVcdFile, mat2strm_U0_start_full_n, "mat2strm_U0_start_full_n");
    sc_trace(mVcdFile, mat2strm_U0_start_write, "mat2strm_U0_start_write");
#endif

    }
    mHdltvinHandle.open("hls_video_block.hdltvin.dat");
    mHdltvoutHandle.open("hls_video_block.hdltvout.dat");
}

hls_video_block::~hls_video_block() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete strm2mat_U0;
    delete rgb2gry_U0;
    delete hls_2DFilter_U0;
    delete gry2rgb_U0;
    delete mat2strm_U0;
    delete in_tmp_data_V_U;
    delete im_1_data_V_U;
    delete im_2_data_V_U;
    delete out_tmp_data_V_U;
    delete start_for_rgb2gryg8j_U;
    delete start_for_hls_2DFhbi_U;
    delete start_for_gry2rgbibs_U;
    delete start_for_mat2strjbC_U;
}

void hls_video_block::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_lv21_E1000;
}

void hls_video_block::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_logic_1;
}

void hls_video_block::thread_INPUT_STREAM_TREADY() {
    INPUT_STREAM_TREADY = strm2mat_U0_INPUT_STREAM_TREADY.read();
}

void hls_video_block::thread_OUTPUT_STREAM_TDATA() {
    OUTPUT_STREAM_TDATA = mat2strm_U0_OUTPUT_STREAM_TDATA.read();
}

void hls_video_block::thread_OUTPUT_STREAM_TDEST() {
    OUTPUT_STREAM_TDEST = mat2strm_U0_OUTPUT_STREAM_TDEST.read();
}

void hls_video_block::thread_OUTPUT_STREAM_TID() {
    OUTPUT_STREAM_TID = mat2strm_U0_OUTPUT_STREAM_TID.read();
}

void hls_video_block::thread_OUTPUT_STREAM_TKEEP() {
    OUTPUT_STREAM_TKEEP = mat2strm_U0_OUTPUT_STREAM_TKEEP.read();
}

void hls_video_block::thread_OUTPUT_STREAM_TLAST() {
    OUTPUT_STREAM_TLAST = mat2strm_U0_OUTPUT_STREAM_TLAST.read();
}

void hls_video_block::thread_OUTPUT_STREAM_TSTRB() {
    OUTPUT_STREAM_TSTRB = mat2strm_U0_OUTPUT_STREAM_TSTRB.read();
}

void hls_video_block::thread_OUTPUT_STREAM_TUSER() {
    OUTPUT_STREAM_TUSER = mat2strm_U0_OUTPUT_STREAM_TUSER.read();
}

void hls_video_block::thread_OUTPUT_STREAM_TVALID() {
    OUTPUT_STREAM_TVALID = mat2strm_U0_OUTPUT_STREAM_TVALID.read();
}

void hls_video_block::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void hls_video_block::thread_ap_sync_continue() {
    ap_sync_continue = ap_const_logic_0;
}

void hls_video_block::thread_gry2rgb_U0_ap_continue() {
    gry2rgb_U0_ap_continue = ap_const_logic_1;
}

void hls_video_block::thread_gry2rgb_U0_ap_start() {
    gry2rgb_U0_ap_start = start_for_gry2rgb_U0_empty_n.read();
}

void hls_video_block::thread_hls_2DFilter_U0_ap_continue() {
    hls_2DFilter_U0_ap_continue = ap_const_logic_1;
}

void hls_video_block::thread_hls_2DFilter_U0_ap_start() {
    hls_2DFilter_U0_ap_start = start_for_hls_2DFilter_U0_empty_n.read();
}

void hls_video_block::thread_mat2strm_U0_ap_continue() {
    mat2strm_U0_ap_continue = ap_const_logic_1;
}

void hls_video_block::thread_mat2strm_U0_ap_start() {
    mat2strm_U0_ap_start = start_for_mat2strm_U0_empty_n.read();
}

void hls_video_block::thread_mat2strm_U0_start_full_n() {
    mat2strm_U0_start_full_n = ap_const_logic_1;
}

void hls_video_block::thread_mat2strm_U0_start_write() {
    mat2strm_U0_start_write = ap_const_logic_0;
}

void hls_video_block::thread_rgb2gry_U0_ap_continue() {
    rgb2gry_U0_ap_continue = ap_const_logic_1;
}

void hls_video_block::thread_rgb2gry_U0_ap_start() {
    rgb2gry_U0_ap_start = start_for_rgb2gry_U0_empty_n.read();
}

void hls_video_block::thread_start_for_gry2rgb_U0_din() {
    start_for_gry2rgb_U0_din =  (sc_lv<1>) (ap_const_logic_1);
}

void hls_video_block::thread_start_for_hls_2DFilter_U0_din() {
    start_for_hls_2DFilter_U0_din =  (sc_lv<1>) (ap_const_logic_1);
}

void hls_video_block::thread_start_for_mat2strm_U0_din() {
    start_for_mat2strm_U0_din =  (sc_lv<1>) (ap_const_logic_1);
}

void hls_video_block::thread_start_for_rgb2gry_U0_din() {
    start_for_rgb2gry_U0_din =  (sc_lv<1>) (ap_const_logic_1);
}

void hls_video_block::thread_strm2mat_U0_ap_continue() {
    strm2mat_U0_ap_continue = ap_const_logic_1;
}

void hls_video_block::thread_strm2mat_U0_ap_start() {
    strm2mat_U0_ap_start = ap_const_logic_1;
}

void hls_video_block::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"INPUT_STREAM_TDATA\" :  \"" << INPUT_STREAM_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"INPUT_STREAM_TKEEP\" :  \"" << INPUT_STREAM_TKEEP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"INPUT_STREAM_TSTRB\" :  \"" << INPUT_STREAM_TSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"INPUT_STREAM_TUSER\" :  \"" << INPUT_STREAM_TUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"INPUT_STREAM_TLAST\" :  \"" << INPUT_STREAM_TLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"INPUT_STREAM_TID\" :  \"" << INPUT_STREAM_TID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"INPUT_STREAM_TDEST\" :  \"" << INPUT_STREAM_TDEST.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"OUTPUT_STREAM_TDATA\" :  \"" << OUTPUT_STREAM_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"OUTPUT_STREAM_TKEEP\" :  \"" << OUTPUT_STREAM_TKEEP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"OUTPUT_STREAM_TSTRB\" :  \"" << OUTPUT_STREAM_TSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"OUTPUT_STREAM_TUSER\" :  \"" << OUTPUT_STREAM_TUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"OUTPUT_STREAM_TLAST\" :  \"" << OUTPUT_STREAM_TLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"OUTPUT_STREAM_TID\" :  \"" << OUTPUT_STREAM_TID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"OUTPUT_STREAM_TDEST\" :  \"" << OUTPUT_STREAM_TDEST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"INPUT_STREAM_TVALID\" :  \"" << INPUT_STREAM_TVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"INPUT_STREAM_TREADY\" :  \"" << INPUT_STREAM_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"OUTPUT_STREAM_TVALID\" :  \"" << OUTPUT_STREAM_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"OUTPUT_STREAM_TREADY\" :  \"" << OUTPUT_STREAM_TREADY.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

