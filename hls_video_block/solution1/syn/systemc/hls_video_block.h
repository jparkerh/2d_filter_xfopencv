// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _hls_video_block_HH_
#define _hls_video_block_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "strm2mat.h"
#include "rgb2gry.h"
#include "hls_2DFilter.h"
#include "gry2rgb.h"
#include "mat2strm.h"
#include "fifo_w24_d100_A.h"
#include "fifo_w7_d100_A.h"
#include "fifo_w1_d100_A.h"
#include "fifo_w17_d100_A.h"
#include "start_for_rgb2gryg8j.h"
#include "start_for_hls_2DFhbi.h"
#include "start_for_gry2rgbibs.h"
#include "start_for_mat2strjbC.h"

namespace ap_rtl {

struct hls_video_block : public sc_module {
    // Port declarations 20
    sc_in< sc_lv<24> > INPUT_STREAM_TDATA;
    sc_in< sc_lv<3> > INPUT_STREAM_TKEEP;
    sc_in< sc_lv<3> > INPUT_STREAM_TSTRB;
    sc_in< sc_lv<1> > INPUT_STREAM_TUSER;
    sc_in< sc_lv<1> > INPUT_STREAM_TLAST;
    sc_in< sc_lv<1> > INPUT_STREAM_TID;
    sc_in< sc_lv<1> > INPUT_STREAM_TDEST;
    sc_out< sc_lv<24> > OUTPUT_STREAM_TDATA;
    sc_out< sc_lv<3> > OUTPUT_STREAM_TKEEP;
    sc_out< sc_lv<3> > OUTPUT_STREAM_TSTRB;
    sc_out< sc_lv<1> > OUTPUT_STREAM_TUSER;
    sc_out< sc_lv<1> > OUTPUT_STREAM_TLAST;
    sc_out< sc_lv<1> > OUTPUT_STREAM_TID;
    sc_out< sc_lv<1> > OUTPUT_STREAM_TDEST;
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_logic > INPUT_STREAM_TVALID;
    sc_out< sc_logic > INPUT_STREAM_TREADY;
    sc_out< sc_logic > OUTPUT_STREAM_TVALID;
    sc_in< sc_logic > OUTPUT_STREAM_TREADY;
    sc_signal< sc_lv<21> > ap_var_for_const0;
    sc_signal< sc_logic > ap_var_for_const1;


    // Module declarations
    hls_video_block(sc_module_name name);
    SC_HAS_PROCESS(hls_video_block);

    ~hls_video_block();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    strm2mat* strm2mat_U0;
    rgb2gry* rgb2gry_U0;
    hls_2DFilter* hls_2DFilter_U0;
    gry2rgb* gry2rgb_U0;
    mat2strm* mat2strm_U0;
    fifo_w24_d100_A* in_tmp_data_V_U;
    fifo_w7_d100_A* im_1_data_V_U;
    fifo_w1_d100_A* im_2_data_V_U;
    fifo_w17_d100_A* out_tmp_data_V_U;
    start_for_rgb2gryg8j* start_for_rgb2gryg8j_U;
    start_for_hls_2DFhbi* start_for_hls_2DFhbi_U;
    start_for_gry2rgbibs* start_for_gry2rgbibs_U;
    start_for_mat2strjbC* start_for_mat2strjbC_U;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > strm2mat_U0_ap_start;
    sc_signal< sc_logic > strm2mat_U0_ap_done;
    sc_signal< sc_logic > strm2mat_U0_ap_continue;
    sc_signal< sc_logic > strm2mat_U0_ap_idle;
    sc_signal< sc_logic > strm2mat_U0_ap_ready;
    sc_signal< sc_logic > strm2mat_U0_start_out;
    sc_signal< sc_logic > strm2mat_U0_start_write;
    sc_signal< sc_logic > strm2mat_U0_INPUT_STREAM_TREADY;
    sc_signal< sc_lv<24> > strm2mat_U0_OUT_data_V_din;
    sc_signal< sc_logic > strm2mat_U0_OUT_data_V_write;
    sc_signal< sc_logic > rgb2gry_U0_ap_start;
    sc_signal< sc_logic > rgb2gry_U0_ap_done;
    sc_signal< sc_logic > rgb2gry_U0_ap_continue;
    sc_signal< sc_logic > rgb2gry_U0_ap_idle;
    sc_signal< sc_logic > rgb2gry_U0_ap_ready;
    sc_signal< sc_logic > rgb2gry_U0_start_out;
    sc_signal< sc_logic > rgb2gry_U0_start_write;
    sc_signal< sc_logic > rgb2gry_U0_input_mat_data_V_read;
    sc_signal< sc_lv<7> > rgb2gry_U0_output_mat_data_V_din;
    sc_signal< sc_logic > rgb2gry_U0_output_mat_data_V_write;
    sc_signal< sc_logic > hls_2DFilter_U0_ap_start;
    sc_signal< sc_logic > hls_2DFilter_U0_ap_done;
    sc_signal< sc_logic > hls_2DFilter_U0_ap_continue;
    sc_signal< sc_logic > hls_2DFilter_U0_ap_idle;
    sc_signal< sc_logic > hls_2DFilter_U0_ap_ready;
    sc_signal< sc_logic > hls_2DFilter_U0_start_out;
    sc_signal< sc_logic > hls_2DFilter_U0_start_write;
    sc_signal< sc_logic > hls_2DFilter_U0_input_mat_data_V_read;
    sc_signal< sc_lv<1> > hls_2DFilter_U0_output_mat_data_V_din;
    sc_signal< sc_logic > hls_2DFilter_U0_output_mat_data_V_write;
    sc_signal< sc_logic > gry2rgb_U0_ap_start;
    sc_signal< sc_logic > gry2rgb_U0_ap_done;
    sc_signal< sc_logic > gry2rgb_U0_ap_continue;
    sc_signal< sc_logic > gry2rgb_U0_ap_idle;
    sc_signal< sc_logic > gry2rgb_U0_ap_ready;
    sc_signal< sc_logic > gry2rgb_U0_start_out;
    sc_signal< sc_logic > gry2rgb_U0_start_write;
    sc_signal< sc_logic > gry2rgb_U0_input_mat_data_V_read;
    sc_signal< sc_lv<17> > gry2rgb_U0_output_mat_data_V_din;
    sc_signal< sc_logic > gry2rgb_U0_output_mat_data_V_write;
    sc_signal< sc_logic > mat2strm_U0_ap_start;
    sc_signal< sc_logic > mat2strm_U0_ap_done;
    sc_signal< sc_logic > mat2strm_U0_ap_continue;
    sc_signal< sc_logic > mat2strm_U0_ap_idle;
    sc_signal< sc_logic > mat2strm_U0_ap_ready;
    sc_signal< sc_logic > mat2strm_U0_IN_data_V_read;
    sc_signal< sc_lv<24> > mat2strm_U0_OUTPUT_STREAM_TDATA;
    sc_signal< sc_logic > mat2strm_U0_OUTPUT_STREAM_TVALID;
    sc_signal< sc_lv<3> > mat2strm_U0_OUTPUT_STREAM_TKEEP;
    sc_signal< sc_lv<3> > mat2strm_U0_OUTPUT_STREAM_TSTRB;
    sc_signal< sc_lv<1> > mat2strm_U0_OUTPUT_STREAM_TUSER;
    sc_signal< sc_lv<1> > mat2strm_U0_OUTPUT_STREAM_TLAST;
    sc_signal< sc_lv<1> > mat2strm_U0_OUTPUT_STREAM_TID;
    sc_signal< sc_lv<1> > mat2strm_U0_OUTPUT_STREAM_TDEST;
    sc_signal< sc_logic > ap_sync_continue;
    sc_signal< sc_logic > in_tmp_data_V_full_n;
    sc_signal< sc_lv<24> > in_tmp_data_V_dout;
    sc_signal< sc_logic > in_tmp_data_V_empty_n;
    sc_signal< sc_logic > im_1_data_V_full_n;
    sc_signal< sc_lv<7> > im_1_data_V_dout;
    sc_signal< sc_logic > im_1_data_V_empty_n;
    sc_signal< sc_logic > im_2_data_V_full_n;
    sc_signal< sc_lv<1> > im_2_data_V_dout;
    sc_signal< sc_logic > im_2_data_V_empty_n;
    sc_signal< sc_logic > out_tmp_data_V_full_n;
    sc_signal< sc_lv<17> > out_tmp_data_V_dout;
    sc_signal< sc_logic > out_tmp_data_V_empty_n;
    sc_signal< sc_lv<1> > start_for_rgb2gry_U0_din;
    sc_signal< sc_logic > start_for_rgb2gry_U0_full_n;
    sc_signal< sc_lv<1> > start_for_rgb2gry_U0_dout;
    sc_signal< sc_logic > start_for_rgb2gry_U0_empty_n;
    sc_signal< sc_lv<1> > start_for_hls_2DFilter_U0_din;
    sc_signal< sc_logic > start_for_hls_2DFilter_U0_full_n;
    sc_signal< sc_lv<1> > start_for_hls_2DFilter_U0_dout;
    sc_signal< sc_logic > start_for_hls_2DFilter_U0_empty_n;
    sc_signal< sc_lv<1> > start_for_gry2rgb_U0_din;
    sc_signal< sc_logic > start_for_gry2rgb_U0_full_n;
    sc_signal< sc_lv<1> > start_for_gry2rgb_U0_dout;
    sc_signal< sc_logic > start_for_gry2rgb_U0_empty_n;
    sc_signal< sc_lv<1> > start_for_mat2strm_U0_din;
    sc_signal< sc_logic > start_for_mat2strm_U0_full_n;
    sc_signal< sc_lv<1> > start_for_mat2strm_U0_dout;
    sc_signal< sc_logic > start_for_mat2strm_U0_empty_n;
    sc_signal< sc_logic > mat2strm_U0_start_full_n;
    sc_signal< sc_logic > mat2strm_U0_start_write;
    static const sc_lv<24> ap_const_lv24_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<21> ap_const_lv21_E1000;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_INPUT_STREAM_TREADY();
    void thread_OUTPUT_STREAM_TDATA();
    void thread_OUTPUT_STREAM_TDEST();
    void thread_OUTPUT_STREAM_TID();
    void thread_OUTPUT_STREAM_TKEEP();
    void thread_OUTPUT_STREAM_TLAST();
    void thread_OUTPUT_STREAM_TSTRB();
    void thread_OUTPUT_STREAM_TUSER();
    void thread_OUTPUT_STREAM_TVALID();
    void thread_ap_rst_n_inv();
    void thread_ap_sync_continue();
    void thread_gry2rgb_U0_ap_continue();
    void thread_gry2rgb_U0_ap_start();
    void thread_hls_2DFilter_U0_ap_continue();
    void thread_hls_2DFilter_U0_ap_start();
    void thread_mat2strm_U0_ap_continue();
    void thread_mat2strm_U0_ap_start();
    void thread_mat2strm_U0_start_full_n();
    void thread_mat2strm_U0_start_write();
    void thread_rgb2gry_U0_ap_continue();
    void thread_rgb2gry_U0_ap_start();
    void thread_start_for_gry2rgb_U0_din();
    void thread_start_for_hls_2DFilter_U0_din();
    void thread_start_for_mat2strm_U0_din();
    void thread_start_for_rgb2gry_U0_din();
    void thread_strm2mat_U0_ap_continue();
    void thread_strm2mat_U0_ap_start();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
