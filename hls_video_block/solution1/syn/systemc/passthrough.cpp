// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "passthrough.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic passthrough::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic passthrough::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> passthrough::ap_ST_fsm_state1 = "1";
const sc_lv<3> passthrough::ap_ST_fsm_state2 = "10";
const sc_lv<3> passthrough::ap_ST_fsm_state3 = "100";
const sc_lv<32> passthrough::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> passthrough::ap_const_lv32_2 = "10";
const sc_lv<1> passthrough::ap_const_lv1_0 = "0";
const sc_lv<32> passthrough::ap_const_lv32_1 = "1";
const sc_lv<10> passthrough::ap_const_lv10_0 = "0000000000";
const sc_lv<1> passthrough::ap_const_lv1_1 = "1";
const sc_lv<11> passthrough::ap_const_lv11_0 = "00000000000";
const sc_lv<10> passthrough::ap_const_lv10_2D0 = "1011010000";
const sc_lv<10> passthrough::ap_const_lv10_1 = "1";
const sc_lv<11> passthrough::ap_const_lv11_438 = "10000111000";
const sc_lv<11> passthrough::ap_const_lv11_1 = "1";
const bool passthrough::ap_const_boolean_1 = true;

passthrough::passthrough(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_block_state3);
    sensitive << ( input_mat_data_strea_empty_n );
    sensitive << ( input_mat_data_strea_3_empty_n );
    sensitive << ( input_mat_data_strea_4_empty_n );
    sensitive << ( output_mat_data_stre_full_n );
    sensitive << ( output_mat_data_stre_3_full_n );
    sensitive << ( output_mat_data_stre_4_full_n );
    sensitive << ( exitcond_fu_210_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_198_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( real_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( internal_ap_ready );

    SC_METHOD(thread_exitcond1_fu_198_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_reg_176 );

    SC_METHOD(thread_exitcond_fu_210_p2);
    sensitive << ( input_mat_data_strea_empty_n );
    sensitive << ( input_mat_data_strea_3_empty_n );
    sensitive << ( input_mat_data_strea_4_empty_n );
    sensitive << ( output_mat_data_stre_full_n );
    sensitive << ( output_mat_data_stre_3_full_n );
    sensitive << ( output_mat_data_stre_4_full_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond_fu_210_p2 );
    sensitive << ( j_reg_187 );

    SC_METHOD(thread_i_1_fu_204_p2);
    sensitive << ( i_reg_176 );

    SC_METHOD(thread_input_mat_data_strea_3_blk_n);
    sensitive << ( input_mat_data_strea_3_empty_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond_fu_210_p2 );

    SC_METHOD(thread_input_mat_data_strea_3_read);
    sensitive << ( input_mat_data_strea_empty_n );
    sensitive << ( input_mat_data_strea_3_empty_n );
    sensitive << ( input_mat_data_strea_4_empty_n );
    sensitive << ( output_mat_data_stre_full_n );
    sensitive << ( output_mat_data_stre_3_full_n );
    sensitive << ( output_mat_data_stre_4_full_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond_fu_210_p2 );

    SC_METHOD(thread_input_mat_data_strea_4_blk_n);
    sensitive << ( input_mat_data_strea_4_empty_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond_fu_210_p2 );

    SC_METHOD(thread_input_mat_data_strea_4_read);
    sensitive << ( input_mat_data_strea_empty_n );
    sensitive << ( input_mat_data_strea_3_empty_n );
    sensitive << ( input_mat_data_strea_4_empty_n );
    sensitive << ( output_mat_data_stre_full_n );
    sensitive << ( output_mat_data_stre_3_full_n );
    sensitive << ( output_mat_data_stre_4_full_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond_fu_210_p2 );

    SC_METHOD(thread_input_mat_data_strea_blk_n);
    sensitive << ( input_mat_data_strea_empty_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond_fu_210_p2 );

    SC_METHOD(thread_input_mat_data_strea_read);
    sensitive << ( input_mat_data_strea_empty_n );
    sensitive << ( input_mat_data_strea_3_empty_n );
    sensitive << ( input_mat_data_strea_4_empty_n );
    sensitive << ( output_mat_data_stre_full_n );
    sensitive << ( output_mat_data_stre_3_full_n );
    sensitive << ( output_mat_data_stre_4_full_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond_fu_210_p2 );

    SC_METHOD(thread_internal_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_198_p2 );

    SC_METHOD(thread_j_1_fu_216_p2);
    sensitive << ( j_reg_187 );

    SC_METHOD(thread_output_mat_data_stre_3_blk_n);
    sensitive << ( output_mat_data_stre_3_full_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond_fu_210_p2 );

    SC_METHOD(thread_output_mat_data_stre_3_din);
    sensitive << ( input_mat_data_strea_empty_n );
    sensitive << ( input_mat_data_strea_3_dout );
    sensitive << ( input_mat_data_strea_3_empty_n );
    sensitive << ( input_mat_data_strea_4_empty_n );
    sensitive << ( output_mat_data_stre_full_n );
    sensitive << ( output_mat_data_stre_3_full_n );
    sensitive << ( output_mat_data_stre_4_full_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond_fu_210_p2 );

    SC_METHOD(thread_output_mat_data_stre_3_write);
    sensitive << ( input_mat_data_strea_empty_n );
    sensitive << ( input_mat_data_strea_3_empty_n );
    sensitive << ( input_mat_data_strea_4_empty_n );
    sensitive << ( output_mat_data_stre_full_n );
    sensitive << ( output_mat_data_stre_3_full_n );
    sensitive << ( output_mat_data_stre_4_full_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond_fu_210_p2 );

    SC_METHOD(thread_output_mat_data_stre_4_blk_n);
    sensitive << ( output_mat_data_stre_4_full_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond_fu_210_p2 );

    SC_METHOD(thread_output_mat_data_stre_4_din);
    sensitive << ( input_mat_data_strea_empty_n );
    sensitive << ( input_mat_data_strea_3_empty_n );
    sensitive << ( input_mat_data_strea_4_dout );
    sensitive << ( input_mat_data_strea_4_empty_n );
    sensitive << ( output_mat_data_stre_full_n );
    sensitive << ( output_mat_data_stre_3_full_n );
    sensitive << ( output_mat_data_stre_4_full_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond_fu_210_p2 );

    SC_METHOD(thread_output_mat_data_stre_4_write);
    sensitive << ( input_mat_data_strea_empty_n );
    sensitive << ( input_mat_data_strea_3_empty_n );
    sensitive << ( input_mat_data_strea_4_empty_n );
    sensitive << ( output_mat_data_stre_full_n );
    sensitive << ( output_mat_data_stre_3_full_n );
    sensitive << ( output_mat_data_stre_4_full_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond_fu_210_p2 );

    SC_METHOD(thread_output_mat_data_stre_blk_n);
    sensitive << ( output_mat_data_stre_full_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond_fu_210_p2 );

    SC_METHOD(thread_output_mat_data_stre_din);
    sensitive << ( input_mat_data_strea_dout );
    sensitive << ( input_mat_data_strea_empty_n );
    sensitive << ( input_mat_data_strea_3_empty_n );
    sensitive << ( input_mat_data_strea_4_empty_n );
    sensitive << ( output_mat_data_stre_full_n );
    sensitive << ( output_mat_data_stre_3_full_n );
    sensitive << ( output_mat_data_stre_4_full_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond_fu_210_p2 );

    SC_METHOD(thread_output_mat_data_stre_write);
    sensitive << ( input_mat_data_strea_empty_n );
    sensitive << ( input_mat_data_strea_3_empty_n );
    sensitive << ( input_mat_data_strea_4_empty_n );
    sensitive << ( output_mat_data_stre_full_n );
    sensitive << ( output_mat_data_stre_3_full_n );
    sensitive << ( output_mat_data_stre_4_full_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond_fu_210_p2 );

    SC_METHOD(thread_real_start);
    sensitive << ( ap_start );
    sensitive << ( start_full_n );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_start_out);
    sensitive << ( real_start );

    SC_METHOD(thread_start_write);
    sensitive << ( real_start );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( input_mat_data_strea_empty_n );
    sensitive << ( input_mat_data_strea_3_empty_n );
    sensitive << ( input_mat_data_strea_4_empty_n );
    sensitive << ( output_mat_data_stre_full_n );
    sensitive << ( output_mat_data_stre_3_full_n );
    sensitive << ( output_mat_data_stre_4_full_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond_fu_210_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_198_p2 );

    start_once_reg = SC_LOGIC_0;
    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "passthrough_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, start_full_n, "(port)start_full_n");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, start_out, "(port)start_out");
    sc_trace(mVcdFile, start_write, "(port)start_write");
    sc_trace(mVcdFile, input_mat_data_strea_dout, "(port)input_mat_data_strea_dout");
    sc_trace(mVcdFile, input_mat_data_strea_empty_n, "(port)input_mat_data_strea_empty_n");
    sc_trace(mVcdFile, input_mat_data_strea_read, "(port)input_mat_data_strea_read");
    sc_trace(mVcdFile, input_mat_data_strea_3_dout, "(port)input_mat_data_strea_3_dout");
    sc_trace(mVcdFile, input_mat_data_strea_3_empty_n, "(port)input_mat_data_strea_3_empty_n");
    sc_trace(mVcdFile, input_mat_data_strea_3_read, "(port)input_mat_data_strea_3_read");
    sc_trace(mVcdFile, input_mat_data_strea_4_dout, "(port)input_mat_data_strea_4_dout");
    sc_trace(mVcdFile, input_mat_data_strea_4_empty_n, "(port)input_mat_data_strea_4_empty_n");
    sc_trace(mVcdFile, input_mat_data_strea_4_read, "(port)input_mat_data_strea_4_read");
    sc_trace(mVcdFile, output_mat_data_stre_din, "(port)output_mat_data_stre_din");
    sc_trace(mVcdFile, output_mat_data_stre_full_n, "(port)output_mat_data_stre_full_n");
    sc_trace(mVcdFile, output_mat_data_stre_write, "(port)output_mat_data_stre_write");
    sc_trace(mVcdFile, output_mat_data_stre_3_din, "(port)output_mat_data_stre_3_din");
    sc_trace(mVcdFile, output_mat_data_stre_3_full_n, "(port)output_mat_data_stre_3_full_n");
    sc_trace(mVcdFile, output_mat_data_stre_3_write, "(port)output_mat_data_stre_3_write");
    sc_trace(mVcdFile, output_mat_data_stre_4_din, "(port)output_mat_data_stre_4_din");
    sc_trace(mVcdFile, output_mat_data_stre_4_full_n, "(port)output_mat_data_stre_4_full_n");
    sc_trace(mVcdFile, output_mat_data_stre_4_write, "(port)output_mat_data_stre_4_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, real_start, "real_start");
    sc_trace(mVcdFile, start_once_reg, "start_once_reg");
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, internal_ap_ready, "internal_ap_ready");
    sc_trace(mVcdFile, input_mat_data_strea_blk_n, "input_mat_data_strea_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, exitcond_fu_210_p2, "exitcond_fu_210_p2");
    sc_trace(mVcdFile, input_mat_data_strea_3_blk_n, "input_mat_data_strea_3_blk_n");
    sc_trace(mVcdFile, input_mat_data_strea_4_blk_n, "input_mat_data_strea_4_blk_n");
    sc_trace(mVcdFile, output_mat_data_stre_blk_n, "output_mat_data_stre_blk_n");
    sc_trace(mVcdFile, output_mat_data_stre_3_blk_n, "output_mat_data_stre_3_blk_n");
    sc_trace(mVcdFile, output_mat_data_stre_4_blk_n, "output_mat_data_stre_4_blk_n");
    sc_trace(mVcdFile, i_1_fu_204_p2, "i_1_fu_204_p2");
    sc_trace(mVcdFile, i_1_reg_225, "i_1_reg_225");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, j_1_fu_216_p2, "j_1_fu_216_p2");
    sc_trace(mVcdFile, ap_block_state3, "ap_block_state3");
    sc_trace(mVcdFile, i_reg_176, "i_reg_176");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, j_reg_187, "j_reg_187");
    sc_trace(mVcdFile, exitcond1_fu_198_p2, "exitcond1_fu_198_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

passthrough::~passthrough() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void passthrough::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(exitcond1_fu_198_p2.read(), ap_const_lv1_1))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ((!((esl_seteq<1,1,1>(exitcond_fu_210_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(output_mat_data_stre_3_full_n.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(exitcond_fu_210_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(output_mat_data_stre_full_n.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(exitcond_fu_210_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(input_mat_data_strea_4_empty_n.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(exitcond_fu_210_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(input_mat_data_strea_3_empty_n.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(exitcond_fu_210_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(input_mat_data_strea_empty_n.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(exitcond_fu_210_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(output_mat_data_stre_4_full_n.read(), ap_const_logic_0))) && 
         esl_seteq<1,1,1>(exitcond_fu_210_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        i_reg_176 = i_1_reg_225.read();
    } else if ((!(esl_seteq<1,1,1>(real_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        i_reg_176 = ap_const_lv10_0;
    }
    if ((!((esl_seteq<1,1,1>(exitcond_fu_210_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(output_mat_data_stre_3_full_n.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(exitcond_fu_210_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(output_mat_data_stre_full_n.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(exitcond_fu_210_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(input_mat_data_strea_4_empty_n.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(exitcond_fu_210_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(input_mat_data_strea_3_empty_n.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(exitcond_fu_210_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(input_mat_data_strea_empty_n.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(exitcond_fu_210_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(output_mat_data_stre_4_full_n.read(), ap_const_logic_0))) && 
         esl_seteq<1,1,1>(exitcond_fu_210_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        j_reg_187 = j_1_fu_216_p2.read();
    } else if ((esl_seteq<1,1,1>(exitcond1_fu_198_p2.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        j_reg_187 = ap_const_lv11_0;
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        start_once_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_0, internal_ap_ready.read()))) {
            start_once_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, internal_ap_ready.read())) {
            start_once_reg = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_1_reg_225 = i_1_fu_204_p2.read();
    }
}

void passthrough::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void passthrough::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void passthrough::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void passthrough::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(real_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void passthrough::thread_ap_block_state3() {
    ap_block_state3 = ((esl_seteq<1,1,1>(exitcond_fu_210_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(output_mat_data_stre_3_full_n.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(exitcond_fu_210_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(output_mat_data_stre_full_n.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(exitcond_fu_210_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(input_mat_data_strea_4_empty_n.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(exitcond_fu_210_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(input_mat_data_strea_3_empty_n.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(exitcond_fu_210_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(input_mat_data_strea_empty_n.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(exitcond_fu_210_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(output_mat_data_stre_4_full_n.read(), ap_const_logic_0)));
}

void passthrough::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond1_fu_198_p2.read(), ap_const_lv1_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void passthrough::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(real_start.read(), ap_const_logic_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void passthrough::thread_ap_ready() {
    ap_ready = internal_ap_ready.read();
}

void passthrough::thread_exitcond1_fu_198_p2() {
    exitcond1_fu_198_p2 = (!i_reg_176.read().is_01() || !ap_const_lv10_2D0.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_176.read() == ap_const_lv10_2D0);
}

void passthrough::thread_exitcond_fu_210_p2() {
    exitcond_fu_210_p2 = (!j_reg_187.read().is_01() || !ap_const_lv11_438.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_187.read() == ap_const_lv11_438);
}

void passthrough::thread_i_1_fu_204_p2() {
    i_1_fu_204_p2 = (!i_reg_176.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(i_reg_176.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void passthrough::thread_input_mat_data_strea_3_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_210_p2.read(), ap_const_lv1_0))) {
        input_mat_data_strea_3_blk_n = input_mat_data_strea_3_empty_n.read();
    } else {
        input_mat_data_strea_3_blk_n = ap_const_logic_1;
    }
}

void passthrough::thread_input_mat_data_strea_3_read() {
    if ((!((esl_seteq<1,1,1>(exitcond_fu_210_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(output_mat_data_stre_3_full_n.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(exitcond_fu_210_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(output_mat_data_stre_full_n.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(exitcond_fu_210_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(input_mat_data_strea_4_empty_n.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(exitcond_fu_210_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(input_mat_data_strea_3_empty_n.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(exitcond_fu_210_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(input_mat_data_strea_empty_n.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(exitcond_fu_210_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(output_mat_data_stre_4_full_n.read(), ap_const_logic_0))) && 
         esl_seteq<1,1,1>(exitcond_fu_210_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        input_mat_data_strea_3_read = ap_const_logic_1;
    } else {
        input_mat_data_strea_3_read = ap_const_logic_0;
    }
}

void passthrough::thread_input_mat_data_strea_4_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_210_p2.read(), ap_const_lv1_0))) {
        input_mat_data_strea_4_blk_n = input_mat_data_strea_4_empty_n.read();
    } else {
        input_mat_data_strea_4_blk_n = ap_const_logic_1;
    }
}

void passthrough::thread_input_mat_data_strea_4_read() {
    if ((!((esl_seteq<1,1,1>(exitcond_fu_210_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(output_mat_data_stre_3_full_n.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(exitcond_fu_210_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(output_mat_data_stre_full_n.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(exitcond_fu_210_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(input_mat_data_strea_4_empty_n.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(exitcond_fu_210_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(input_mat_data_strea_3_empty_n.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(exitcond_fu_210_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(input_mat_data_strea_empty_n.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(exitcond_fu_210_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(output_mat_data_stre_4_full_n.read(), ap_const_logic_0))) && 
         esl_seteq<1,1,1>(exitcond_fu_210_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        input_mat_data_strea_4_read = ap_const_logic_1;
    } else {
        input_mat_data_strea_4_read = ap_const_logic_0;
    }
}

void passthrough::thread_input_mat_data_strea_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_210_p2.read(), ap_const_lv1_0))) {
        input_mat_data_strea_blk_n = input_mat_data_strea_empty_n.read();
    } else {
        input_mat_data_strea_blk_n = ap_const_logic_1;
    }
}

void passthrough::thread_input_mat_data_strea_read() {
    if ((!((esl_seteq<1,1,1>(exitcond_fu_210_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(output_mat_data_stre_3_full_n.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(exitcond_fu_210_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(output_mat_data_stre_full_n.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(exitcond_fu_210_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(input_mat_data_strea_4_empty_n.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(exitcond_fu_210_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(input_mat_data_strea_3_empty_n.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(exitcond_fu_210_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(input_mat_data_strea_empty_n.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(exitcond_fu_210_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(output_mat_data_stre_4_full_n.read(), ap_const_logic_0))) && 
         esl_seteq<1,1,1>(exitcond_fu_210_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        input_mat_data_strea_read = ap_const_logic_1;
    } else {
        input_mat_data_strea_read = ap_const_logic_0;
    }
}

void passthrough::thread_internal_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond1_fu_198_p2.read(), ap_const_lv1_1))) {
        internal_ap_ready = ap_const_logic_1;
    } else {
        internal_ap_ready = ap_const_logic_0;
    }
}

void passthrough::thread_j_1_fu_216_p2() {
    j_1_fu_216_p2 = (!j_reg_187.read().is_01() || !ap_const_lv11_1.is_01())? sc_lv<11>(): (sc_biguint<11>(j_reg_187.read()) + sc_biguint<11>(ap_const_lv11_1));
}

void passthrough::thread_output_mat_data_stre_3_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_210_p2.read(), ap_const_lv1_0))) {
        output_mat_data_stre_3_blk_n = output_mat_data_stre_3_full_n.read();
    } else {
        output_mat_data_stre_3_blk_n = ap_const_logic_1;
    }
}

void passthrough::thread_output_mat_data_stre_3_din() {
    output_mat_data_stre_3_din = input_mat_data_strea_3_dout.read();
}

void passthrough::thread_output_mat_data_stre_3_write() {
    if ((!((esl_seteq<1,1,1>(exitcond_fu_210_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(output_mat_data_stre_3_full_n.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(exitcond_fu_210_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(output_mat_data_stre_full_n.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(exitcond_fu_210_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(input_mat_data_strea_4_empty_n.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(exitcond_fu_210_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(input_mat_data_strea_3_empty_n.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(exitcond_fu_210_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(input_mat_data_strea_empty_n.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(exitcond_fu_210_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(output_mat_data_stre_4_full_n.read(), ap_const_logic_0))) && 
         esl_seteq<1,1,1>(exitcond_fu_210_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        output_mat_data_stre_3_write = ap_const_logic_1;
    } else {
        output_mat_data_stre_3_write = ap_const_logic_0;
    }
}

void passthrough::thread_output_mat_data_stre_4_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_210_p2.read(), ap_const_lv1_0))) {
        output_mat_data_stre_4_blk_n = output_mat_data_stre_4_full_n.read();
    } else {
        output_mat_data_stre_4_blk_n = ap_const_logic_1;
    }
}

void passthrough::thread_output_mat_data_stre_4_din() {
    output_mat_data_stre_4_din = input_mat_data_strea_4_dout.read();
}

void passthrough::thread_output_mat_data_stre_4_write() {
    if ((!((esl_seteq<1,1,1>(exitcond_fu_210_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(output_mat_data_stre_3_full_n.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(exitcond_fu_210_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(output_mat_data_stre_full_n.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(exitcond_fu_210_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(input_mat_data_strea_4_empty_n.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(exitcond_fu_210_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(input_mat_data_strea_3_empty_n.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(exitcond_fu_210_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(input_mat_data_strea_empty_n.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(exitcond_fu_210_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(output_mat_data_stre_4_full_n.read(), ap_const_logic_0))) && 
         esl_seteq<1,1,1>(exitcond_fu_210_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        output_mat_data_stre_4_write = ap_const_logic_1;
    } else {
        output_mat_data_stre_4_write = ap_const_logic_0;
    }
}

void passthrough::thread_output_mat_data_stre_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_210_p2.read(), ap_const_lv1_0))) {
        output_mat_data_stre_blk_n = output_mat_data_stre_full_n.read();
    } else {
        output_mat_data_stre_blk_n = ap_const_logic_1;
    }
}

void passthrough::thread_output_mat_data_stre_din() {
    output_mat_data_stre_din = input_mat_data_strea_dout.read();
}

void passthrough::thread_output_mat_data_stre_write() {
    if ((!((esl_seteq<1,1,1>(exitcond_fu_210_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(output_mat_data_stre_3_full_n.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(exitcond_fu_210_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(output_mat_data_stre_full_n.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(exitcond_fu_210_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(input_mat_data_strea_4_empty_n.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(exitcond_fu_210_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(input_mat_data_strea_3_empty_n.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(exitcond_fu_210_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(input_mat_data_strea_empty_n.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(exitcond_fu_210_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(output_mat_data_stre_4_full_n.read(), ap_const_logic_0))) && 
         esl_seteq<1,1,1>(exitcond_fu_210_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        output_mat_data_stre_write = ap_const_logic_1;
    } else {
        output_mat_data_stre_write = ap_const_logic_0;
    }
}

void passthrough::thread_real_start() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_full_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()))) {
        real_start = ap_const_logic_0;
    } else {
        real_start = ap_start.read();
    }
}

void passthrough::thread_start_out() {
    start_out = real_start.read();
}

void passthrough::thread_start_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()))) {
        start_write = ap_const_logic_1;
    } else {
        start_write = ap_const_logic_0;
    }
}

void passthrough::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((!(esl_seteq<1,1,1>(real_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond1_fu_198_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((!((esl_seteq<1,1,1>(exitcond_fu_210_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(output_mat_data_stre_3_full_n.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(exitcond_fu_210_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(output_mat_data_stre_full_n.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(exitcond_fu_210_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(input_mat_data_strea_4_empty_n.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(exitcond_fu_210_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(input_mat_data_strea_3_empty_n.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(exitcond_fu_210_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(input_mat_data_strea_empty_n.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(exitcond_fu_210_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(output_mat_data_stre_4_full_n.read(), ap_const_logic_0))) && esl_seteq<1,1,1>(exitcond_fu_210_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else if ((!((esl_seteq<1,1,1>(exitcond_fu_210_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(output_mat_data_stre_3_full_n.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(exitcond_fu_210_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(output_mat_data_stre_full_n.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(exitcond_fu_210_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(input_mat_data_strea_4_empty_n.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(exitcond_fu_210_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(input_mat_data_strea_3_empty_n.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(exitcond_fu_210_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(input_mat_data_strea_empty_n.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(exitcond_fu_210_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(output_mat_data_stre_4_full_n.read(), ap_const_logic_0))) && esl_seteq<1,1,1>(exitcond_fu_210_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        default : 
            ap_NS_fsm = "XXX";
            break;
    }
}

}

