// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _hls_2DFilter_HH_
#define _hls_2DFilter_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "hls_2DFilter_lineeOg.h"

namespace ap_rtl {

struct hls_2DFilter : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_in< sc_logic > start_full_n;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > start_out;
    sc_out< sc_logic > start_write;
    sc_in< sc_lv<8> > input_mat_data_strea_dout;
    sc_in< sc_logic > input_mat_data_strea_empty_n;
    sc_out< sc_logic > input_mat_data_strea_read;
    sc_out< sc_lv<8> > output_mat_data_stre_din;
    sc_in< sc_logic > output_mat_data_stre_full_n;
    sc_out< sc_logic > output_mat_data_stre_write;


    // Module declarations
    hls_2DFilter(sc_module_name name);
    SC_HAS_PROCESS(hls_2DFilter);

    ~hls_2DFilter();

    sc_trace_file* mVcdFile;

    hls_2DFilter_lineeOg* line_buffer_0_0_va_U;
    hls_2DFilter_lineeOg* line_buffer_1_0_va_U;
    sc_signal< sc_logic > real_start;
    sc_signal< sc_logic > start_once_reg;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > internal_ap_ready;
    sc_signal< sc_logic > input_mat_data_strea_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > exitcond1_reg_481;
    sc_signal< sc_logic > output_mat_data_stre_blk_n;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter4;
    sc_signal< sc_lv<1> > exitcond1_reg_481_pp0_iter3_reg;
    sc_signal< sc_lv<11> > col_reg_164;
    sc_signal< sc_lv<1> > exitcond2_fu_175_p2;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<10> > row_1_fu_181_p2;
    sc_signal< sc_lv<10> > row_1_reg_471;
    sc_signal< sc_lv<1> > tmp_4_fu_187_p2;
    sc_signal< sc_lv<1> > tmp_4_reg_476;
    sc_signal< sc_lv<1> > exitcond1_fu_193_p2;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter3;
    sc_signal< bool > ap_block_state7_pp0_stage0_iter4;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > exitcond1_reg_481_pp0_iter1_reg;
    sc_signal< sc_lv<1> > exitcond1_reg_481_pp0_iter2_reg;
    sc_signal< sc_lv<11> > col_1_fu_199_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<11> > line_buffer_0_0_va_1_reg_490;
    sc_signal< sc_lv<11> > line_buffer_1_0_va_1_reg_496;
    sc_signal< sc_lv<1> > tmp_8_fu_211_p2;
    sc_signal< sc_lv<1> > tmp_8_reg_502;
    sc_signal< sc_lv<1> > tmp_8_reg_502_pp0_iter1_reg;
    sc_signal< sc_lv<1> > tmp_8_reg_502_pp0_iter2_reg;
    sc_signal< sc_lv<1> > tmp_8_reg_502_pp0_iter3_reg;
    sc_signal< sc_lv<8> > IN_WINDOW_val_1_val_1_reg_507;
    sc_signal< sc_lv<8> > tmp_12_reg_512;
    sc_signal< sc_lv<8> > line_buffer_1_0_va_q0;
    sc_signal< sc_lv<8> > IN_WINDOW_val_1_val_2_reg_518;
    sc_signal< sc_lv<8> > x_mag_2_0_2_i_fu_244_p2;
    sc_signal< sc_lv<8> > x_mag_2_0_2_i_reg_523;
    sc_signal< sc_lv<8> > tmp2_fu_256_p2;
    sc_signal< sc_lv<8> > tmp2_reg_528;
    sc_signal< sc_lv<8> > x_mag_2_2_2_i_fu_320_p2;
    sc_signal< sc_lv<8> > x_mag_2_2_2_i_reg_533;
    sc_signal< sc_lv<8> > y_mag_2_2_2_i_fu_331_p2;
    sc_signal< sc_lv<8> > y_mag_2_2_2_i_reg_539;
    sc_signal< sc_lv<1> > tmp_5_i_fu_407_p2;
    sc_signal< sc_lv<1> > tmp_5_i_reg_545;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter1_state4;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_lv<11> > line_buffer_0_0_va_address0;
    sc_signal< sc_logic > line_buffer_0_0_va_ce0;
    sc_signal< sc_lv<8> > line_buffer_0_0_va_q0;
    sc_signal< sc_logic > line_buffer_0_0_va_ce1;
    sc_signal< sc_logic > line_buffer_0_0_va_we1;
    sc_signal< sc_lv<11> > line_buffer_1_0_va_address0;
    sc_signal< sc_logic > line_buffer_1_0_va_ce0;
    sc_signal< sc_logic > line_buffer_1_0_va_ce1;
    sc_signal< sc_logic > line_buffer_1_0_va_we1;
    sc_signal< sc_lv<10> > row_reg_153;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<64> > tmp_7_fu_205_p1;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<8> > IN_WINDOW_val_val_0_1_fu_74;
    sc_signal< sc_lv<8> > IN_WINDOW_val_val_0_s_fu_78;
    sc_signal< sc_lv<8> > IN_WINDOW_val_val_2_1_fu_82;
    sc_signal< sc_lv<8> > IN_WINDOW_val_val_1_1_fu_86;
    sc_signal< sc_lv<8> > IN_WINDOW_val_1_val_fu_90;
    sc_signal< sc_lv<8> > IN_WINDOW_val_val_2_s_fu_94;
    sc_signal< sc_lv<8> > tmp_fu_226_p2;
    sc_signal< sc_lv<8> > tmp_12_0_1_i_fu_232_p2;
    sc_signal< sc_lv<8> > y_mag_2_0_1_i_fu_238_p2;
    sc_signal< sc_lv<8> > y_mag_2_0_2_i_fu_250_p2;
    sc_signal< sc_lv<8> > tmp_1_fu_286_p2;
    sc_signal< sc_lv<8> > tmp_3_fu_297_p2;
    sc_signal< sc_lv<8> > x_mag_2_1_1_i_fu_292_p2;
    sc_signal< sc_lv<8> > x_mag_2_1_2_i_fu_302_p2;
    sc_signal< sc_lv<8> > x_mag_2_2_i_fu_308_p2;
    sc_signal< sc_lv<8> > tmp_10_fu_314_p2;
    sc_signal< sc_lv<8> > tmp3_fu_325_p2;
    sc_signal< sc_lv<9> > tmp_i_cast_fu_349_p1;
    sc_signal< sc_lv<1> > abscond_i_i_fu_358_p2;
    sc_signal< sc_lv<9> > neg_i_i_fu_352_p2;
    sc_signal< sc_lv<9> > abs_i_i_fu_363_p3;
    sc_signal< sc_lv<9> > tmp_2_i_cast_fu_375_p1;
    sc_signal< sc_lv<1> > abscond_i2_i_fu_384_p2;
    sc_signal< sc_lv<9> > neg_i1_i_fu_378_p2;
    sc_signal< sc_lv<9> > abs_i3_i_fu_389_p3;
    sc_signal< sc_lv<10> > abs_i_i_cast_fu_371_p1;
    sc_signal< sc_lv<10> > abs_i3_i_cast_fu_397_p1;
    sc_signal< sc_lv<10> > tmp_4_i_fu_401_p2;
    sc_signal< sc_lv<1> > tmp4_fu_413_p2;
    sc_signal< sc_lv<1> > tmp_2_fu_417_p2;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_fsm_state1;
    static const sc_lv<4> ap_ST_fsm_state2;
    static const sc_lv<4> ap_ST_fsm_pp0_stage0;
    static const sc_lv<4> ap_ST_fsm_state8;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<11> ap_const_lv11_0;
    static const sc_lv<10> ap_const_lv10_2D0;
    static const sc_lv<10> ap_const_lv10_1;
    static const sc_lv<11> ap_const_lv11_500;
    static const sc_lv<11> ap_const_lv11_1;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<10> ap_const_lv10_7D;
    static const sc_lv<8> ap_const_lv8_FF;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_abs_i3_i_cast_fu_397_p1();
    void thread_abs_i3_i_fu_389_p3();
    void thread_abs_i_i_cast_fu_371_p1();
    void thread_abs_i_i_fu_363_p3();
    void thread_abscond_i2_i_fu_384_p2();
    void thread_abscond_i_i_fu_358_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state8();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state3_pp0_stage0_iter0();
    void thread_ap_block_state4_pp0_stage0_iter1();
    void thread_ap_block_state5_pp0_stage0_iter2();
    void thread_ap_block_state6_pp0_stage0_iter3();
    void thread_ap_block_state7_pp0_stage0_iter4();
    void thread_ap_condition_pp0_exit_iter1_state4();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_ready();
    void thread_col_1_fu_199_p2();
    void thread_exitcond1_fu_193_p2();
    void thread_exitcond2_fu_175_p2();
    void thread_input_mat_data_strea_blk_n();
    void thread_input_mat_data_strea_read();
    void thread_internal_ap_ready();
    void thread_line_buffer_0_0_va_address0();
    void thread_line_buffer_0_0_va_ce0();
    void thread_line_buffer_0_0_va_ce1();
    void thread_line_buffer_0_0_va_we1();
    void thread_line_buffer_1_0_va_address0();
    void thread_line_buffer_1_0_va_ce0();
    void thread_line_buffer_1_0_va_ce1();
    void thread_line_buffer_1_0_va_we1();
    void thread_neg_i1_i_fu_378_p2();
    void thread_neg_i_i_fu_352_p2();
    void thread_output_mat_data_stre_blk_n();
    void thread_output_mat_data_stre_din();
    void thread_output_mat_data_stre_write();
    void thread_real_start();
    void thread_row_1_fu_181_p2();
    void thread_start_out();
    void thread_start_write();
    void thread_tmp2_fu_256_p2();
    void thread_tmp3_fu_325_p2();
    void thread_tmp4_fu_413_p2();
    void thread_tmp_10_fu_314_p2();
    void thread_tmp_12_0_1_i_fu_232_p2();
    void thread_tmp_1_fu_286_p2();
    void thread_tmp_2_fu_417_p2();
    void thread_tmp_2_i_cast_fu_375_p1();
    void thread_tmp_3_fu_297_p2();
    void thread_tmp_4_fu_187_p2();
    void thread_tmp_4_i_fu_401_p2();
    void thread_tmp_5_i_fu_407_p2();
    void thread_tmp_7_fu_205_p1();
    void thread_tmp_8_fu_211_p2();
    void thread_tmp_fu_226_p2();
    void thread_tmp_i_cast_fu_349_p1();
    void thread_x_mag_2_0_2_i_fu_244_p2();
    void thread_x_mag_2_1_1_i_fu_292_p2();
    void thread_x_mag_2_1_2_i_fu_302_p2();
    void thread_x_mag_2_2_2_i_fu_320_p2();
    void thread_x_mag_2_2_i_fu_308_p2();
    void thread_y_mag_2_0_1_i_fu_238_p2();
    void thread_y_mag_2_0_2_i_fu_250_p2();
    void thread_y_mag_2_2_2_i_fu_331_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
